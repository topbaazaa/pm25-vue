{"remainingRequest":"C:\\Users\\Acer\\Desktop\\pmm\\pm25-vue\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Acer\\Desktop\\pmm\\pm25-vue\\node_modules\\vuetify\\lib\\components\\VSelect\\VSelectList.js","dependencies":[{"path":"C:\\Users\\Acer\\Desktop\\pmm\\pm25-vue\\node_modules\\vuetify\\lib\\components\\VSelect\\VSelectList.js","mtime":499162500000},{"path":"C:\\Users\\Acer\\Desktop\\pmm\\pm25-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Acer\\Desktop\\pmm\\pm25-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["// Styles\nimport \"../../../src/components/VCard/VCard.sass\"; // Components\n\nimport VSimpleCheckbox from '../VCheckbox/VSimpleCheckbox';\nimport VDivider from '../VDivider';\nimport VSubheader from '../VSubheader';\nimport { VList, VListItem, VListItemAction, VListItemContent, VListItemTitle } from '../VList'; // Directives\n\nimport ripple from '../../directives/ripple'; // Mixins\n\nimport Colorable from '../../mixins/colorable';\nimport Themeable from '../../mixins/themeable'; // Helpers\n\nimport { escapeHTML, getPropertyFromItem } from '../../util/helpers'; // Types\n\nimport mixins from '../../util/mixins';\n/* @vue/component */\n\nexport default mixins(Colorable, Themeable).extend({\n  name: 'v-select-list',\n  // https://github.com/vuejs/vue/issues/6872\n  directives: {\n    ripple\n  },\n  props: {\n    action: Boolean,\n    dense: Boolean,\n    hideSelected: Boolean,\n    items: {\n      type: Array,\n      default: () => []\n    },\n    itemDisabled: {\n      type: [String, Array, Function],\n      default: 'disabled'\n    },\n    itemText: {\n      type: [String, Array, Function],\n      default: 'text'\n    },\n    itemValue: {\n      type: [String, Array, Function],\n      default: 'value'\n    },\n    noDataText: String,\n    noFilter: Boolean,\n    searchInput: {\n      default: null\n    },\n    selectedItems: {\n      type: Array,\n      default: () => []\n    }\n  },\n  computed: {\n    parsedItems() {\n      return this.selectedItems.map(item => this.getValue(item));\n    },\n\n    tileActiveClass() {\n      return Object.keys(this.setTextColor(this.color).class || {}).join(' ');\n    },\n\n    staticNoDataTile() {\n      const tile = {\n        attrs: {\n          role: undefined\n        },\n        on: {\n          mousedown: e => e.preventDefault()\n        }\n      };\n      return this.$createElement(VListItem, tile, [this.genTileContent(this.noDataText)]);\n    }\n\n  },\n  methods: {\n    genAction(item, inputValue) {\n      return this.$createElement(VListItemAction, [this.$createElement(VSimpleCheckbox, {\n        props: {\n          color: this.color,\n          value: inputValue\n        },\n        on: {\n          input: () => this.$emit('select', item)\n        }\n      })]);\n    },\n\n    genDivider(props) {\n      return this.$createElement(VDivider, {\n        props\n      });\n    },\n\n    genFilteredText(text) {\n      text = text || '';\n      if (!this.searchInput || this.noFilter) return escapeHTML(text);\n      const {\n        start,\n        middle,\n        end\n      } = this.getMaskedCharacters(text);\n      return `${escapeHTML(start)}${this.genHighlight(middle)}${escapeHTML(end)}`;\n    },\n\n    genHeader(props) {\n      return this.$createElement(VSubheader, {\n        props\n      }, props.header);\n    },\n\n    genHighlight(text) {\n      return `<span class=\"v-list-item__mask\">${escapeHTML(text)}</span>`;\n    },\n\n    genLabelledBy(item) {\n      const text = escapeHTML(this.getText(item).split(' ').join('-').toLowerCase());\n      return `${text}-list-item-${this._uid}`;\n    },\n\n    getMaskedCharacters(text) {\n      const searchInput = (this.searchInput || '').toString().toLocaleLowerCase();\n      const index = text.toLocaleLowerCase().indexOf(searchInput);\n      if (index < 0) return {\n        start: '',\n        middle: text,\n        end: ''\n      };\n      const start = text.slice(0, index);\n      const middle = text.slice(index, index + searchInput.length);\n      const end = text.slice(index + searchInput.length);\n      return {\n        start,\n        middle,\n        end\n      };\n    },\n\n    genTile(item, disabled = null, value = false) {\n      if (!value) value = this.hasItem(item);\n\n      if (item === Object(item)) {\n        disabled = disabled !== null ? disabled : this.getDisabled(item);\n      }\n\n      const tile = {\n        attrs: {\n          // Default behavior in list does not\n          // contain aria-selected by default\n          'aria-selected': String(value),\n          'aria-labelledby': this.genLabelledBy(item),\n          role: 'option'\n        },\n        on: {\n          mousedown: e => {\n            // Prevent onBlur from being called\n            e.preventDefault();\n          },\n          click: () => disabled || this.$emit('select', item)\n        },\n        props: {\n          activeClass: this.tileActiveClass,\n          disabled,\n          ripple: true,\n          inputValue: value\n        }\n      };\n\n      if (!this.$scopedSlots.item) {\n        return this.$createElement(VListItem, tile, [this.action && !this.hideSelected && this.items.length > 0 ? this.genAction(item, value) : null, this.genTileContent(item)]);\n      }\n\n      const parent = this;\n      const scopedSlot = this.$scopedSlots.item({\n        parent,\n        item,\n        attrs: { ...tile.attrs,\n          ...tile.props\n        },\n        on: tile.on\n      });\n      return this.needsTile(scopedSlot) ? this.$createElement(VListItem, tile, scopedSlot) : scopedSlot;\n    },\n\n    genTileContent(item) {\n      const innerHTML = this.genFilteredText(this.getText(item));\n      return this.$createElement(VListItemContent, [this.$createElement(VListItemTitle, {\n        attrs: {\n          id: this.genLabelledBy(item)\n        },\n        domProps: {\n          innerHTML\n        }\n      })]);\n    },\n\n    hasItem(item) {\n      return this.parsedItems.indexOf(this.getValue(item)) > -1;\n    },\n\n    needsTile(slot) {\n      return slot.length !== 1 || slot[0].componentOptions == null || slot[0].componentOptions.Ctor.options.name !== 'v-list-item';\n    },\n\n    getDisabled(item) {\n      return Boolean(getPropertyFromItem(item, this.itemDisabled, false));\n    },\n\n    getText(item) {\n      return String(getPropertyFromItem(item, this.itemText, item));\n    },\n\n    getValue(item) {\n      return getPropertyFromItem(item, this.itemValue, this.getText(item));\n    }\n\n  },\n\n  render() {\n    const children = [];\n\n    for (const item of this.items) {\n      if (this.hideSelected && this.hasItem(item)) continue;\n      if (item == null) children.push(this.genTile(item));else if (item.header) children.push(this.genHeader(item));else if (item.divider) children.push(this.genDivider(item));else children.push(this.genTile(item));\n    }\n\n    children.length || children.push(this.$slots['no-data'] || this.staticNoDataTile);\n    this.$slots['prepend-item'] && children.unshift(this.$slots['prepend-item']);\n    this.$slots['append-item'] && children.push(this.$slots['append-item']);\n    return this.$createElement('div', {\n      staticClass: 'v-select-list v-card',\n      class: this.themeClasses\n    }, [this.$createElement(VList, {\n      attrs: {\n        id: this.$attrs.id,\n        role: 'listbox',\n        tabindex: -1\n      },\n      props: {\n        dense: this.dense\n      }\n    }, children)]);\n  }\n\n});",{"version":3,"sources":["../../../src/components/VSelect/VSelectList.ts"],"names":[],"mappings":"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","sourcesContent":["// Styles\nimport '../VCard/VCard.sass'\n\n// Components\nimport VSimpleCheckbox from '../VCheckbox/VSimpleCheckbox'\nimport VDivider from '../VDivider'\nimport VSubheader from '../VSubheader'\nimport {\n  VList,\n  VListItem,\n  VListItemAction,\n  VListItemContent,\n  VListItemTitle,\n} from '../VList'\n\n// Directives\nimport ripple from '../../directives/ripple'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport Themeable from '../../mixins/themeable'\n\n// Helpers\nimport {\n  escapeHTML,\n  getPropertyFromItem,\n} from '../../util/helpers'\n\n// Types\nimport mixins from '../../util/mixins'\nimport { VNode } from 'vue'\nimport { PropValidator } from 'vue/types/options'\n\n/* @vue/component */\nexport default mixins(Colorable, Themeable).extend({\n  name: 'v-select-list',\n\n  // https://github.com/vuejs/vue/issues/6872\n  directives: {\n    ripple,\n  },\n\n  props: {\n    action: Boolean,\n    dense: Boolean,\n    hideSelected: Boolean,\n    items: {\n      type: Array,\n      default: () => [],\n    } as PropValidator<any[]>,\n    itemDisabled: {\n      type: [String, Array, Function],\n      default: 'disabled',\n    } as PropValidator<string | (string | number)[] | ((item: object, fallback?: any) => any)>,\n    itemText: {\n      type: [String, Array, Function],\n      default: 'text',\n    } as PropValidator<string | (string | number)[] | ((item: object, fallback?: any) => any)>,\n    itemValue: {\n      type: [String, Array, Function],\n      default: 'value',\n    } as PropValidator<string | (string | number)[] | ((item: object, fallback?: any) => any)>,\n    noDataText: String,\n    noFilter: Boolean,\n    searchInput: {\n      default: null,\n    } as PropValidator<any>,\n    selectedItems: {\n      type: Array,\n      default: () => [],\n    } as PropValidator<any[]>,\n  },\n\n  computed: {\n    parsedItems (): any[] {\n      return this.selectedItems.map(item => this.getValue(item))\n    },\n    tileActiveClass (): string {\n      return Object.keys(this.setTextColor(this.color).class || {}).join(' ')\n    },\n    staticNoDataTile (): VNode {\n      const tile = {\n        attrs: {\n          role: undefined,\n        },\n        on: {\n          mousedown: (e: Event) => e.preventDefault(), // Prevent onBlur from being called\n        },\n      }\n\n      return this.$createElement(VListItem, tile, [\n        this.genTileContent(this.noDataText),\n      ])\n    },\n  },\n\n  methods: {\n    genAction (item: object, inputValue: any): VNode {\n      return this.$createElement(VListItemAction, [\n        this.$createElement(VSimpleCheckbox, {\n          props: {\n            color: this.color,\n            value: inputValue,\n          },\n          on: {\n            input: () => this.$emit('select', item),\n          },\n        }),\n      ])\n    },\n    genDivider (props: { [key: string]: any }) {\n      return this.$createElement(VDivider, { props })\n    },\n    genFilteredText (text: string) {\n      text = text || ''\n\n      if (!this.searchInput || this.noFilter) return escapeHTML(text)\n\n      const { start, middle, end } = this.getMaskedCharacters(text)\n\n      return `${escapeHTML(start)}${this.genHighlight(middle)}${escapeHTML(end)}`\n    },\n    genHeader (props: { [key: string]: any }): VNode {\n      return this.$createElement(VSubheader, { props }, props.header)\n    },\n    genHighlight (text: string): string {\n      return `<span class=\"v-list-item__mask\">${escapeHTML(text)}</span>`\n    },\n    genLabelledBy (item: object) {\n      const text = escapeHTML(this.getText(item).split(' ').join('-').toLowerCase())\n\n      return `${text}-list-item-${this._uid}`\n    },\n    getMaskedCharacters (text: string): {\n      start: string\n      middle: string\n      end: string\n    } {\n      const searchInput = (this.searchInput || '').toString().toLocaleLowerCase()\n      const index = text.toLocaleLowerCase().indexOf(searchInput)\n\n      if (index < 0) return { start: '', middle: text, end: '' }\n\n      const start = text.slice(0, index)\n      const middle = text.slice(index, index + searchInput.length)\n      const end = text.slice(index + searchInput.length)\n      return { start, middle, end }\n    },\n    genTile (\n      item: object,\n      disabled = null as null | boolean,\n      value = false\n    ): VNode | VNode[] | undefined {\n      if (!value) value = this.hasItem(item)\n\n      if (item === Object(item)) {\n        disabled = disabled !== null\n          ? disabled\n          : this.getDisabled(item)\n      }\n\n      const tile = {\n        attrs: {\n          // Default behavior in list does not\n          // contain aria-selected by default\n          'aria-selected': String(value),\n          'aria-labelledby': this.genLabelledBy(item),\n          role: 'option',\n        },\n        on: {\n          mousedown: (e: Event) => {\n            // Prevent onBlur from being called\n            e.preventDefault()\n          },\n          click: () => disabled || this.$emit('select', item),\n        },\n        props: {\n          activeClass: this.tileActiveClass,\n          disabled,\n          ripple: true,\n          inputValue: value,\n        },\n      }\n\n      if (!this.$scopedSlots.item) {\n        return this.$createElement(VListItem, tile, [\n          this.action && !this.hideSelected && this.items.length > 0\n            ? this.genAction(item, value)\n            : null,\n          this.genTileContent(item),\n        ])\n      }\n\n      const parent = this\n      const scopedSlot = this.$scopedSlots.item({\n        parent,\n        item,\n        attrs: {\n          ...tile.attrs,\n          ...tile.props,\n        },\n        on: tile.on,\n      })\n\n      return this.needsTile(scopedSlot)\n        ? this.$createElement(VListItem, tile, scopedSlot)\n        : scopedSlot\n    },\n    genTileContent (item: any): VNode {\n      const innerHTML = this.genFilteredText(this.getText(item))\n\n      return this.$createElement(VListItemContent,\n        [this.$createElement(VListItemTitle, {\n          attrs: { id: this.genLabelledBy(item) },\n          domProps: { innerHTML },\n        })]\n      )\n    },\n    hasItem (item: object) {\n      return this.parsedItems.indexOf(this.getValue(item)) > -1\n    },\n    needsTile (slot: VNode[] | undefined) {\n      return slot!.length !== 1 ||\n        slot![0].componentOptions == null ||\n        slot![0].componentOptions.Ctor.options.name !== 'v-list-item'\n    },\n    getDisabled (item: object) {\n      return Boolean(getPropertyFromItem(item, this.itemDisabled, false))\n    },\n    getText (item: object) {\n      return String(getPropertyFromItem(item, this.itemText, item))\n    },\n    getValue (item: object) {\n      return getPropertyFromItem(item, this.itemValue, this.getText(item))\n    },\n  },\n\n  render (): VNode {\n    const children = []\n    for (const item of this.items) {\n      if (this.hideSelected &&\n        this.hasItem(item)\n      ) continue\n\n      if (item == null) children.push(this.genTile(item))\n      else if (item.header) children.push(this.genHeader(item))\n      else if (item.divider) children.push(this.genDivider(item))\n      else children.push(this.genTile(item))\n    }\n\n    children.length || children.push(this.$slots['no-data'] || this.staticNoDataTile)\n\n    this.$slots['prepend-item'] && children.unshift(this.$slots['prepend-item'])\n\n    this.$slots['append-item'] && children.push(this.$slots['append-item'])\n\n    return this.$createElement('div', {\n      staticClass: 'v-select-list v-card',\n      class: this.themeClasses,\n    }, [\n      this.$createElement(VList, {\n        attrs: {\n          id: this.$attrs.id,\n          role: 'listbox',\n          tabindex: -1,\n        },\n        props: { dense: this.dense },\n      }, children),\n    ])\n  },\n})\n"],"sourceRoot":""}]}