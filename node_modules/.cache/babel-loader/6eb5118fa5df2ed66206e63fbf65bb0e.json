{"remainingRequest":"C:\\Users\\Acer\\Desktop\\pmm\\pm25-vue\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Acer\\Desktop\\pmm\\pm25-vue\\node_modules\\vuetify\\lib\\install.js","dependencies":[{"path":"C:\\Users\\Acer\\Desktop\\pmm\\pm25-vue\\node_modules\\vuetify\\lib\\install.js","mtime":499162500000},{"path":"C:\\Users\\Acer\\Desktop\\pmm\\pm25-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Acer\\Desktop\\pmm\\pm25-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import OurVue from 'vue';\nimport { consoleError } from './util/console';\nexport function install(Vue, args = {}) {\n  if (install.installed) return;\n  install.installed = true;\n\n  if (OurVue !== Vue) {\n    consoleError('Multiple instances of Vue detected\\nSee https://github.com/vuetifyjs/vuetify/issues/4068\\n\\nIf you\\'re seeing \"$attrs is readonly\", it\\'s caused by this');\n  }\n\n  const components = args.components || {};\n  const directives = args.directives || {};\n\n  for (const name in directives) {\n    const directive = directives[name];\n    Vue.directive(name, directive);\n  }\n\n  (function registerComponents(components) {\n    if (components) {\n      for (const key in components) {\n        const component = components[key];\n\n        if (component && !registerComponents(component.$_vuetify_subcomponents)) {\n          Vue.component(key, component);\n        }\n      }\n\n      return true;\n    }\n\n    return false;\n  })(components); // Used to avoid multiple mixins being setup\n  // when in dev mode and hot module reload\n  // https://github.com/vuejs/vue/issues/5089#issuecomment-284260111\n\n\n  if (Vue.$_vuetify_installed) return;\n  Vue.$_vuetify_installed = true;\n  Vue.mixin({\n    beforeCreate() {\n      const options = this.$options;\n\n      if (options.vuetify) {\n        options.vuetify.init(this, options.ssrContext);\n        this.$vuetify = Vue.observable(options.vuetify.framework);\n      } else {\n        this.$vuetify = options.parent && options.parent.$vuetify || this;\n      }\n    }\n\n  });\n}",{"version":3,"sources":["../src/install.ts"],"names":[],"mappings":"AAAA,OAAA,MAAA,MAAA,KAAA;AAEA,SAAA,YAAA,QAAA,gBAAA;AAEA,OAAM,SAAA,OAAA,CAAA,GAAA,EAAwC,IAAA,GAAxC,EAAA,EAAoE;AACxE,MAAK,OAAe,CAApB,SAAA,EAAgC;AAC/B,EAAA,OAAe,CAAf,SAAA,GAAA,IAAA;;AAED,MAAI,MAAM,KAAV,GAAA,EAAoB;AAClB,IAAA,YAAY,CAAZ,0JAAY,CAAZ;AACD;;AAED,QAAM,UAAU,GAAG,IAAI,CAAJ,UAAA,IAAnB,EAAA;AACA,QAAM,UAAU,GAAG,IAAI,CAAJ,UAAA,IAAnB,EAAA;;AAEA,OAAK,MAAL,IAAA,IAAA,UAAA,EAA+B;AAC7B,UAAM,SAAS,GAAG,UAAU,CAA5B,IAA4B,CAA5B;AAEA,IAAA,GAAG,CAAH,SAAA,CAAA,IAAA,EAAA,SAAA;AACD;;AAED,GAAC,SAAA,kBAAA,CAAA,UAAA,EAA4C;AAC3C,QAAA,UAAA,EAAgB;AACd,WAAK,MAAL,GAAA,IAAA,UAAA,EAA8B;AAC5B,cAAM,SAAS,GAAG,UAAU,CAA5B,GAA4B,CAA5B;;AACA,YAAI,SAAS,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAA9C,uBAAoC,CAApC,EAAyE;AACvE,UAAA,GAAG,CAAH,SAAA,CAAA,GAAA,EAAA,SAAA;AACD;AACF;;AACD,aAAA,IAAA;AACD;;AACD,WAAA,KAAA;AAVF,GAAA,EAjBwE,UAiBxE,EAjBwE,CA8BxE;AACA;AACA;;;AACA,MAAI,GAAG,CAAP,mBAAA,EAA6B;AAC7B,EAAA,GAAG,CAAH,mBAAA,GAAA,IAAA;AAEA,EAAA,GAAG,CAAH,KAAA,CAAU;AACR,IAAA,YAAY,GAAA;AACV,YAAM,OAAO,GAAG,KAAhB,QAAA;;AAEA,UAAI,OAAO,CAAX,OAAA,EAAqB;AACnB,QAAA,OAAO,CAAP,OAAA,CAAA,IAAA,CAAA,IAAA,EAA2B,OAAO,CAAlC,UAAA;AACA,aAAA,QAAA,GAAgB,GAAG,CAAH,UAAA,CAAe,OAAO,CAAP,OAAA,CAA/B,SAAgB,CAAhB;AAFF,OAAA,MAGO;AACL,aAAA,QAAA,GAAiB,OAAO,CAAP,MAAA,IAAkB,OAAO,CAAP,MAAA,CAAnB,QAAC,IAAjB,IAAA;AACD;AACF;;AAVO,GAAV;AAYD","sourcesContent":["import OurVue, { VueConstructor } from 'vue'\nimport { VuetifyUseOptions } from 'types'\nimport { consoleError } from './util/console'\n\nexport function install (Vue: VueConstructor, args: VuetifyUseOptions = {}) {\n  if ((install as any).installed) return\n  (install as any).installed = true\n\n  if (OurVue !== Vue) {\n    consoleError('Multiple instances of Vue detected\\nSee https://github.com/vuetifyjs/vuetify/issues/4068\\n\\nIf you\\'re seeing \"$attrs is readonly\", it\\'s caused by this')\n  }\n\n  const components = args.components || {}\n  const directives = args.directives || {}\n\n  for (const name in directives) {\n    const directive = directives[name]\n\n    Vue.directive(name, directive)\n  }\n\n  (function registerComponents (components: any) {\n    if (components) {\n      for (const key in components) {\n        const component = components[key]\n        if (component && !registerComponents(component.$_vuetify_subcomponents)) {\n          Vue.component(key, component as typeof Vue)\n        }\n      }\n      return true\n    }\n    return false\n  })(components)\n\n  // Used to avoid multiple mixins being setup\n  // when in dev mode and hot module reload\n  // https://github.com/vuejs/vue/issues/5089#issuecomment-284260111\n  if (Vue.$_vuetify_installed) return\n  Vue.$_vuetify_installed = true\n\n  Vue.mixin({\n    beforeCreate () {\n      const options = this.$options as any\n\n      if (options.vuetify) {\n        options.vuetify.init(this, options.ssrContext)\n        this.$vuetify = Vue.observable(options.vuetify.framework)\n      } else {\n        this.$vuetify = (options.parent && options.parent.$vuetify) || this\n      }\n    },\n  })\n}\n"],"sourceRoot":""}]}