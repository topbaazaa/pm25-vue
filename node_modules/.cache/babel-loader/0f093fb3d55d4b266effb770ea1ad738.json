{"remainingRequest":"C:\\Users\\Acer\\Desktop\\pmm\\pm25-vue\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Acer\\Desktop\\pmm\\pm25-vue\\node_modules\\vuetify\\lib\\components\\VForm\\VForm.js","dependencies":[{"path":"C:\\Users\\Acer\\Desktop\\pmm\\pm25-vue\\node_modules\\vuetify\\lib\\components\\VForm\\VForm.js","mtime":499162500000},{"path":"C:\\Users\\Acer\\Desktop\\pmm\\pm25-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Acer\\Desktop\\pmm\\pm25-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["// Mixins\nimport mixins from '../../util/mixins';\nimport BindsAttrs from '../../mixins/binds-attrs';\nimport { provide as RegistrableProvide } from '../../mixins/registrable';\n/* @vue/component */\n\nexport default mixins(BindsAttrs, RegistrableProvide('form')\n/* @vue/component */\n).extend({\n  name: 'v-form',\n  inheritAttrs: false,\n  props: {\n    lazyValidation: Boolean,\n    value: Boolean\n  },\n  data: () => ({\n    inputs: [],\n    watchers: [],\n    errorBag: {}\n  }),\n  watch: {\n    errorBag: {\n      handler(val) {\n        const errors = Object.values(val).includes(true);\n        this.$emit('input', !errors);\n      },\n\n      deep: true,\n      immediate: true\n    }\n  },\n  methods: {\n    watchInput(input) {\n      const watcher = input => {\n        return input.$watch('hasError', val => {\n          this.$set(this.errorBag, input._uid, val);\n        }, {\n          immediate: true\n        });\n      };\n\n      const watchers = {\n        _uid: input._uid,\n        valid: () => {},\n        shouldValidate: () => {}\n      };\n\n      if (this.lazyValidation) {\n        // Only start watching inputs if we need to\n        watchers.shouldValidate = input.$watch('shouldValidate', val => {\n          if (!val) return; // Only watch if we're not already doing it\n\n          if (this.errorBag.hasOwnProperty(input._uid)) return;\n          watchers.valid = watcher(input);\n        });\n      } else {\n        watchers.valid = watcher(input);\n      }\n\n      return watchers;\n    },\n\n    /** @public */\n    validate() {\n      return this.inputs.filter(input => !input.validate(true)).length === 0;\n    },\n\n    /** @public */\n    reset() {\n      this.inputs.forEach(input => input.reset());\n      this.resetErrorBag();\n    },\n\n    resetErrorBag() {\n      if (this.lazyValidation) {\n        // Account for timeout in validatable\n        setTimeout(() => {\n          this.errorBag = {};\n        }, 0);\n      }\n    },\n\n    /** @public */\n    resetValidation() {\n      this.inputs.forEach(input => input.resetValidation());\n      this.resetErrorBag();\n    },\n\n    register(input) {\n      this.inputs.push(input);\n      this.watchers.push(this.watchInput(input));\n    },\n\n    unregister(input) {\n      const found = this.inputs.find(i => i._uid === input._uid);\n      if (!found) return;\n      const unwatch = this.watchers.find(i => i._uid === found._uid);\n\n      if (unwatch) {\n        unwatch.valid();\n        unwatch.shouldValidate();\n      }\n\n      this.watchers = this.watchers.filter(i => i._uid !== found._uid);\n      this.inputs = this.inputs.filter(i => i._uid !== found._uid);\n      this.$delete(this.errorBag, found._uid);\n    }\n\n  },\n\n  render(h) {\n    return h('form', {\n      staticClass: 'v-form',\n      attrs: {\n        novalidate: true,\n        ...this.attrs$\n      },\n      on: {\n        submit: e => this.$emit('submit', e)\n      }\n    }, this.$slots.default);\n  }\n\n});",{"version":3,"sources":["../../../src/components/VForm/VForm.ts"],"names":[],"mappings":"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","sourcesContent":["// Components\nimport VInput from '../VInput/VInput'\n\n// Mixins\nimport mixins from '../../util/mixins'\nimport BindsAttrs from '../../mixins/binds-attrs'\nimport { provide as RegistrableProvide } from '../../mixins/registrable'\n\n// Helpers\nimport { VNode } from 'vue'\n\ntype ErrorBag = Record<number, boolean>\ntype VInputInstance = InstanceType<typeof VInput>\ntype Watchers = {\n  _uid: number\n  valid: () => void\n  shouldValidate: () => void\n}\n\n/* @vue/component */\nexport default mixins(\n  BindsAttrs,\n  RegistrableProvide('form')\n  /* @vue/component */\n).extend({\n  name: 'v-form',\n\n  inheritAttrs: false,\n\n  props: {\n    lazyValidation: Boolean,\n    value: Boolean,\n  },\n\n  data: () => ({\n    inputs: [] as VInputInstance[],\n    watchers: [] as Watchers[],\n    errorBag: {} as ErrorBag,\n  }),\n\n  watch: {\n    errorBag: {\n      handler (val) {\n        const errors = Object.values(val).includes(true)\n\n        this.$emit('input', !errors)\n      },\n      deep: true,\n      immediate: true,\n    },\n  },\n\n  methods: {\n    watchInput (input: any): Watchers {\n      const watcher = (input: any): (() => void) => {\n        return input.$watch('hasError', (val: boolean) => {\n          this.$set(this.errorBag, input._uid, val)\n        }, { immediate: true })\n      }\n\n      const watchers: Watchers = {\n        _uid: input._uid,\n        valid: () => {},\n        shouldValidate: () => {},\n      }\n\n      if (this.lazyValidation) {\n        // Only start watching inputs if we need to\n        watchers.shouldValidate = input.$watch('shouldValidate', (val: boolean) => {\n          if (!val) return\n\n          // Only watch if we're not already doing it\n          if (this.errorBag.hasOwnProperty(input._uid)) return\n\n          watchers.valid = watcher(input)\n        })\n      } else {\n        watchers.valid = watcher(input)\n      }\n\n      return watchers\n    },\n    /** @public */\n    validate (): boolean {\n      return this.inputs.filter(input => !input.validate(true)).length === 0\n    },\n    /** @public */\n    reset (): void {\n      this.inputs.forEach(input => input.reset())\n      this.resetErrorBag()\n    },\n    resetErrorBag () {\n      if (this.lazyValidation) {\n        // Account for timeout in validatable\n        setTimeout(() => {\n          this.errorBag = {}\n        }, 0)\n      }\n    },\n    /** @public */\n    resetValidation () {\n      this.inputs.forEach(input => input.resetValidation())\n      this.resetErrorBag()\n    },\n    register (input: VInputInstance) {\n      this.inputs.push(input)\n      this.watchers.push(this.watchInput(input))\n    },\n    unregister (input: VInputInstance) {\n      const found = this.inputs.find(i => i._uid === input._uid)\n\n      if (!found) return\n\n      const unwatch = this.watchers.find(i => i._uid === found._uid)\n      if (unwatch) {\n        unwatch.valid()\n        unwatch.shouldValidate()\n      }\n\n      this.watchers = this.watchers.filter(i => i._uid !== found._uid)\n      this.inputs = this.inputs.filter(i => i._uid !== found._uid)\n      this.$delete(this.errorBag, found._uid)\n    },\n  },\n\n  render (h): VNode {\n    return h('form', {\n      staticClass: 'v-form',\n      attrs: {\n        novalidate: true,\n        ...this.attrs$,\n      },\n      on: {\n        submit: (e: Event) => this.$emit('submit', e),\n      },\n    }, this.$slots.default)\n  },\n})\n"],"sourceRoot":""}]}