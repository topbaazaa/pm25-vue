{"remainingRequest":"C:\\Users\\Acer\\Desktop\\pmm\\pm25-vue\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Acer\\Desktop\\pmm\\pm25-vue\\node_modules\\vuetify\\lib\\mixins\\routable\\index.js","dependencies":[{"path":"C:\\Users\\Acer\\Desktop\\pmm\\pm25-vue\\node_modules\\vuetify\\lib\\mixins\\routable\\index.js","mtime":499162500000},{"path":"C:\\Users\\Acer\\Desktop\\pmm\\pm25-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Acer\\Desktop\\pmm\\pm25-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import Vue from 'vue'; // Directives\n\nimport Ripple from '../../directives/ripple'; // Utilities\n\nimport { getObjectValueByPath } from '../../util/helpers';\nexport default Vue.extend({\n  name: 'routable',\n  directives: {\n    Ripple\n  },\n  props: {\n    activeClass: String,\n    append: Boolean,\n    disabled: Boolean,\n    exact: {\n      type: Boolean,\n      default: undefined\n    },\n    exactActiveClass: String,\n    link: Boolean,\n    href: [String, Object],\n    to: [String, Object],\n    nuxt: Boolean,\n    replace: Boolean,\n    ripple: {\n      type: [Boolean, Object],\n      default: null\n    },\n    tag: String,\n    target: String\n  },\n  data: () => ({\n    isActive: false,\n    proxyClass: ''\n  }),\n  computed: {\n    classes() {\n      const classes = {};\n      if (this.to) return classes;\n      if (this.activeClass) classes[this.activeClass] = this.isActive;\n      if (this.proxyClass) classes[this.proxyClass] = this.isActive;\n      return classes;\n    },\n\n    computedRipple() {\n      return this.ripple != null ? this.ripple : !this.disabled && this.isClickable;\n    },\n\n    isClickable() {\n      if (this.disabled) return false;\n      return Boolean(this.isLink || this.$listeners.click || this.$listeners['!click'] || this.$attrs.tabindex);\n    },\n\n    isLink() {\n      return this.to || this.href || this.link;\n    },\n\n    styles: () => ({})\n  },\n  watch: {\n    $route: 'onRouteChange'\n  },\n  methods: {\n    click(e) {\n      this.$emit('click', e);\n    },\n\n    generateRouteLink() {\n      let exact = this.exact;\n      let tag;\n      const data = {\n        attrs: {\n          tabindex: 'tabindex' in this.$attrs ? this.$attrs.tabindex : undefined\n        },\n        class: this.classes,\n        style: this.styles,\n        props: {},\n        directives: [{\n          name: 'ripple',\n          value: this.computedRipple\n        }],\n        [this.to ? 'nativeOn' : 'on']: { ...this.$listeners,\n          click: this.click\n        },\n        ref: 'link'\n      };\n\n      if (typeof this.exact === 'undefined') {\n        exact = this.to === '/' || this.to === Object(this.to) && this.to.path === '/';\n      }\n\n      if (this.to) {\n        // Add a special activeClass hook\n        // for component level styles\n        let activeClass = this.activeClass;\n        let exactActiveClass = this.exactActiveClass || activeClass;\n\n        if (this.proxyClass) {\n          activeClass = `${activeClass} ${this.proxyClass}`.trim();\n          exactActiveClass = `${exactActiveClass} ${this.proxyClass}`.trim();\n        }\n\n        tag = this.nuxt ? 'nuxt-link' : 'router-link';\n        Object.assign(data.props, {\n          to: this.to,\n          exact,\n          activeClass,\n          exactActiveClass,\n          append: this.append,\n          replace: this.replace\n        });\n      } else {\n        tag = this.href && 'a' || this.tag || 'div';\n        if (tag === 'a' && this.href) data.attrs.href = this.href;\n      }\n\n      if (this.target) data.attrs.target = this.target;\n      return {\n        tag,\n        data\n      };\n    },\n\n    onRouteChange() {\n      if (!this.to || !this.$refs.link || !this.$route) return;\n      const activeClass = `${this.activeClass} ${this.proxyClass || ''}`.trim();\n      const path = `_vnode.data.class.${activeClass}`;\n      this.$nextTick(() => {\n        /* istanbul ignore else */\n        if (getObjectValueByPath(this.$refs.link, path)) {\n          this.toggle();\n        }\n      });\n    },\n\n    toggle: () => {}\n  }\n});",{"version":3,"sources":["../../../src/mixins/routable/index.ts"],"names":[],"mappings":"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","sourcesContent":["import Vue, { VNodeData } from 'vue'\n\n// Types\nimport { PropValidator } from 'vue/types/options'\n\n// Directives\nimport Ripple, { RippleOptions } from '../../directives/ripple'\n\n// Utilities\nimport { getObjectValueByPath } from '../../util/helpers'\n\nexport default Vue.extend({\n  name: 'routable',\n\n  directives: {\n    Ripple,\n  },\n\n  props: {\n    activeClass: String,\n    append: Boolean,\n    disabled: Boolean,\n    exact: {\n      type: Boolean,\n      default: undefined,\n    } as PropValidator<boolean | undefined>,\n    exactActiveClass: String,\n    link: Boolean,\n    href: [String, Object],\n    to: [String, Object],\n    nuxt: Boolean,\n    replace: Boolean,\n    ripple: {\n      type: [Boolean, Object],\n      default: null,\n    },\n    tag: String,\n    target: String,\n  },\n\n  data: () => ({\n    isActive: false,\n    proxyClass: '',\n  }),\n\n  computed: {\n    classes (): object {\n      const classes: Record<string, boolean> = {}\n\n      if (this.to) return classes\n\n      if (this.activeClass) classes[this.activeClass] = this.isActive\n      if (this.proxyClass) classes[this.proxyClass] = this.isActive\n\n      return classes\n    },\n    computedRipple (): RippleOptions | boolean {\n      return this.ripple != null ? this.ripple : !this.disabled && this.isClickable\n    },\n    isClickable (): boolean {\n      if (this.disabled) return false\n\n      return Boolean(\n        this.isLink ||\n        this.$listeners.click ||\n        this.$listeners['!click'] ||\n        this.$attrs.tabindex\n      )\n    },\n    isLink (): boolean {\n      return this.to || this.href || this.link\n    },\n    styles: () => ({}),\n  },\n\n  watch: {\n    $route: 'onRouteChange',\n  },\n\n  methods: {\n    click (e: MouseEvent): void {\n      this.$emit('click', e)\n    },\n    generateRouteLink () {\n      let exact = this.exact\n      let tag\n\n      const data: VNodeData = {\n        attrs: {\n          tabindex: 'tabindex' in this.$attrs ? this.$attrs.tabindex : undefined,\n        },\n        class: this.classes,\n        style: this.styles,\n        props: {},\n        directives: [{\n          name: 'ripple',\n          value: this.computedRipple,\n        }],\n        [this.to ? 'nativeOn' : 'on']: {\n          ...this.$listeners,\n          click: this.click,\n        },\n        ref: 'link',\n      }\n\n      if (typeof this.exact === 'undefined') {\n        exact = this.to === '/' ||\n          (this.to === Object(this.to) && this.to.path === '/')\n      }\n\n      if (this.to) {\n        // Add a special activeClass hook\n        // for component level styles\n        let activeClass = this.activeClass\n        let exactActiveClass = this.exactActiveClass || activeClass\n\n        if (this.proxyClass) {\n          activeClass = `${activeClass} ${this.proxyClass}`.trim()\n          exactActiveClass = `${exactActiveClass} ${this.proxyClass}`.trim()\n        }\n\n        tag = this.nuxt ? 'nuxt-link' : 'router-link'\n        Object.assign(data.props, {\n          to: this.to,\n          exact,\n          activeClass,\n          exactActiveClass,\n          append: this.append,\n          replace: this.replace,\n        })\n      } else {\n        tag = (this.href && 'a') || this.tag || 'div'\n\n        if (tag === 'a' && this.href) data.attrs!.href = this.href\n      }\n\n      if (this.target) data.attrs!.target = this.target\n\n      return { tag, data }\n    },\n    onRouteChange () {\n      if (!this.to || !this.$refs.link || !this.$route) return\n      const activeClass = `${this.activeClass} ${this.proxyClass || ''}`.trim()\n\n      const path = `_vnode.data.class.${activeClass}`\n\n      this.$nextTick(() => {\n        /* istanbul ignore else */\n        if (getObjectValueByPath(this.$refs.link, path)) {\n          this.toggle()\n        }\n      })\n    },\n    toggle: () => { /* noop */ },\n  },\n})\n"],"sourceRoot":""}]}