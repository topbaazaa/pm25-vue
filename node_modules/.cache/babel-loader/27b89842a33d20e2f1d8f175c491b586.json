{"remainingRequest":"C:\\Users\\Acer\\Desktop\\pmm\\pm25-vue\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Acer\\Desktop\\pmm\\pm25-vue\\node_modules\\vuetify\\lib\\components\\VList\\VListGroup.js","dependencies":[{"path":"C:\\Users\\Acer\\Desktop\\pmm\\pm25-vue\\node_modules\\vuetify\\lib\\components\\VList\\VListGroup.js","mtime":499162500000},{"path":"C:\\Users\\Acer\\Desktop\\pmm\\pm25-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Acer\\Desktop\\pmm\\pm25-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["// Styles\nimport \"../../../src/components/VList/VListGroup.sass\"; // Components\n\nimport VIcon from '../VIcon';\nimport VListItem from './VListItem';\nimport VListItemIcon from './VListItemIcon'; // Mixins\n\nimport BindsAttrs from '../../mixins/binds-attrs';\nimport Bootable from '../../mixins/bootable';\nimport Colorable from '../../mixins/colorable';\nimport Toggleable from '../../mixins/toggleable';\nimport { inject as RegistrableInject } from '../../mixins/registrable'; // Directives\n\nimport ripple from '../../directives/ripple'; // Transitions\n\nimport { VExpandTransition } from '../transitions'; // Utils\n\nimport mixins from '../../util/mixins';\nconst baseMixins = mixins(BindsAttrs, Bootable, Colorable, RegistrableInject('list'), Toggleable);\nexport default baseMixins.extend().extend({\n  name: 'v-list-group',\n  directives: {\n    ripple\n  },\n  props: {\n    activeClass: {\n      type: String,\n      default: ''\n    },\n    appendIcon: {\n      type: String,\n      default: '$expand'\n    },\n    color: {\n      type: String,\n      default: 'primary'\n    },\n    disabled: Boolean,\n    group: String,\n    noAction: Boolean,\n    prependIcon: String,\n    ripple: {\n      type: [Boolean, Object],\n      default: true\n    },\n    subGroup: Boolean\n  },\n  computed: {\n    classes() {\n      return {\n        'v-list-group--active': this.isActive,\n        'v-list-group--disabled': this.disabled,\n        'v-list-group--no-action': this.noAction,\n        'v-list-group--sub-group': this.subGroup\n      };\n    }\n\n  },\n  watch: {\n    isActive(val) {\n      /* istanbul ignore else */\n      if (!this.subGroup && val) {\n        this.list && this.list.listClick(this._uid);\n      }\n    },\n\n    $route: 'onRouteChange'\n  },\n\n  created() {\n    this.list && this.list.register(this);\n\n    if (this.group && this.$route && this.value == null) {\n      this.isActive = this.matchRoute(this.$route.path);\n    }\n  },\n\n  beforeDestroy() {\n    this.list && this.list.unregister(this);\n  },\n\n  methods: {\n    click(e) {\n      if (this.disabled) return;\n      this.isBooted = true;\n      this.$emit('click', e);\n      this.$nextTick(() => this.isActive = !this.isActive);\n    },\n\n    genIcon(icon) {\n      return this.$createElement(VIcon, icon);\n    },\n\n    genAppendIcon() {\n      const icon = !this.subGroup ? this.appendIcon : false;\n      if (!icon && !this.$slots.appendIcon) return null;\n      return this.$createElement(VListItemIcon, {\n        staticClass: 'v-list-group__header__append-icon'\n      }, [this.$slots.appendIcon || this.genIcon(icon)]);\n    },\n\n    genHeader() {\n      return this.$createElement(VListItem, {\n        staticClass: 'v-list-group__header',\n        attrs: {\n          'aria-expanded': String(this.isActive),\n          role: 'button'\n        },\n        class: {\n          [this.activeClass]: this.isActive\n        },\n        props: {\n          inputValue: this.isActive\n        },\n        directives: [{\n          name: 'ripple',\n          value: this.ripple\n        }],\n        on: { ...this.listeners$,\n          click: this.click\n        }\n      }, [this.genPrependIcon(), this.$slots.activator, this.genAppendIcon()]);\n    },\n\n    genItems() {\n      return this.$createElement('div', {\n        staticClass: 'v-list-group__items',\n        directives: [{\n          name: 'show',\n          value: this.isActive\n        }]\n      }, this.showLazyContent([this.$createElement('div', this.$slots.default)]));\n    },\n\n    genPrependIcon() {\n      const icon = this.prependIcon ? this.prependIcon : this.subGroup ? '$subgroup' : false;\n      if (!icon && !this.$slots.prependIcon) return null;\n      return this.$createElement(VListItemIcon, {\n        staticClass: 'v-list-group__header__prepend-icon'\n      }, [this.$slots.prependIcon || this.genIcon(icon)]);\n    },\n\n    onRouteChange(to) {\n      /* istanbul ignore if */\n      if (!this.group) return;\n      const isActive = this.matchRoute(to.path);\n      /* istanbul ignore else */\n\n      if (isActive && this.isActive !== isActive) {\n        this.list && this.list.listClick(this._uid);\n      }\n\n      this.isActive = isActive;\n    },\n\n    toggle(uid) {\n      const isActive = this._uid === uid;\n      if (isActive) this.isBooted = true;\n      this.$nextTick(() => this.isActive = isActive);\n    },\n\n    matchRoute(to) {\n      return to.match(this.group) !== null;\n    }\n\n  },\n\n  render(h) {\n    return h('div', this.setTextColor(this.isActive && this.color, {\n      staticClass: 'v-list-group',\n      class: this.classes\n    }), [this.genHeader(), h(VExpandTransition, [this.genItems()])]);\n  }\n\n});",{"version":3,"sources":["../../../src/components/VList/VListGroup.ts"],"names":[],"mappings":"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","sourcesContent":["// Styles\nimport './VListGroup.sass'\n\n// Components\nimport VIcon from '../VIcon'\nimport VList from './VList'\nimport VListItem from './VListItem'\nimport VListItemIcon from './VListItemIcon'\n\n// Mixins\nimport BindsAttrs from '../../mixins/binds-attrs'\nimport Bootable from '../../mixins/bootable'\nimport Colorable from '../../mixins/colorable'\nimport Toggleable from '../../mixins/toggleable'\nimport { inject as RegistrableInject } from '../../mixins/registrable'\n\n// Directives\nimport ripple from '../../directives/ripple'\n\n// Transitions\nimport { VExpandTransition } from '../transitions'\n\n// Utils\nimport mixins, { ExtractVue } from '../../util/mixins'\n\n// Types\nimport { VNode } from 'vue'\nimport { Route } from 'vue-router'\n\nconst baseMixins = mixins(\n  BindsAttrs,\n  Bootable,\n  Colorable,\n  RegistrableInject('list'),\n  Toggleable\n)\n\ntype VListInstance = InstanceType<typeof VList>\n\ninterface options extends ExtractVue<typeof baseMixins> {\n  list: VListInstance\n  $refs: {\n    group: HTMLElement\n  }\n  $route: Route\n}\n\nexport default baseMixins.extend<options>().extend({\n  name: 'v-list-group',\n\n  directives: { ripple },\n\n  props: {\n    activeClass: {\n      type: String,\n      default: '',\n    },\n    appendIcon: {\n      type: String,\n      default: '$expand',\n    },\n    color: {\n      type: String,\n      default: 'primary',\n    },\n    disabled: Boolean,\n    group: String,\n    noAction: Boolean,\n    prependIcon: String,\n    ripple: {\n      type: [Boolean, Object],\n      default: true,\n    },\n    subGroup: Boolean,\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        'v-list-group--active': this.isActive,\n        'v-list-group--disabled': this.disabled,\n        'v-list-group--no-action': this.noAction,\n        'v-list-group--sub-group': this.subGroup,\n      }\n    },\n  },\n\n  watch: {\n    isActive (val: boolean) {\n      /* istanbul ignore else */\n      if (!this.subGroup && val) {\n        this.list && this.list.listClick(this._uid)\n      }\n    },\n    $route: 'onRouteChange',\n  },\n\n  created () {\n    this.list && this.list.register(this)\n\n    if (this.group &&\n      this.$route &&\n      this.value == null\n    ) {\n      this.isActive = this.matchRoute(this.$route.path)\n    }\n  },\n\n  beforeDestroy () {\n    this.list && this.list.unregister(this)\n  },\n\n  methods: {\n    click (e: Event) {\n      if (this.disabled) return\n\n      this.isBooted = true\n\n      this.$emit('click', e)\n      this.$nextTick(() => (this.isActive = !this.isActive))\n    },\n    genIcon (icon: string | false): VNode {\n      return this.$createElement(VIcon, icon)\n    },\n    genAppendIcon (): VNode | null {\n      const icon = !this.subGroup ? this.appendIcon : false\n\n      if (!icon && !this.$slots.appendIcon) return null\n\n      return this.$createElement(VListItemIcon, {\n        staticClass: 'v-list-group__header__append-icon',\n      }, [\n        this.$slots.appendIcon || this.genIcon(icon),\n      ])\n    },\n    genHeader (): VNode {\n      return this.$createElement(VListItem, {\n        staticClass: 'v-list-group__header',\n        attrs: {\n          'aria-expanded': String(this.isActive),\n          role: 'button',\n        },\n        class: {\n          [this.activeClass]: this.isActive,\n        },\n        props: {\n          inputValue: this.isActive,\n        },\n        directives: [{\n          name: 'ripple',\n          value: this.ripple,\n        }],\n        on: {\n          ...this.listeners$,\n          click: this.click,\n        },\n      }, [\n        this.genPrependIcon(),\n        this.$slots.activator,\n        this.genAppendIcon(),\n      ])\n    },\n    genItems (): VNode {\n      return this.$createElement('div', {\n        staticClass: 'v-list-group__items',\n        directives: [{\n          name: 'show',\n          value: this.isActive,\n        }],\n      }, this.showLazyContent([\n        this.$createElement('div', this.$slots.default),\n      ]))\n    },\n    genPrependIcon (): VNode | null {\n      const icon = this.prependIcon\n        ? this.prependIcon\n        : this.subGroup\n          ? '$subgroup'\n          : false\n\n      if (!icon && !this.$slots.prependIcon) return null\n\n      return this.$createElement(VListItemIcon, {\n        staticClass: 'v-list-group__header__prepend-icon',\n      }, [\n        this.$slots.prependIcon || this.genIcon(icon),\n      ])\n    },\n    onRouteChange (to: Route) {\n      /* istanbul ignore if */\n      if (!this.group) return\n\n      const isActive = this.matchRoute(to.path)\n\n      /* istanbul ignore else */\n      if (isActive && this.isActive !== isActive) {\n        this.list && this.list.listClick(this._uid)\n      }\n\n      this.isActive = isActive\n    },\n    toggle (uid: number) {\n      const isActive = this._uid === uid\n\n      if (isActive) this.isBooted = true\n      this.$nextTick(() => (this.isActive = isActive))\n    },\n    matchRoute (to: string) {\n      return to.match(this.group) !== null\n    },\n  },\n\n  render (h): VNode {\n    return h('div', this.setTextColor(this.isActive && this.color, {\n      staticClass: 'v-list-group',\n      class: this.classes,\n    }), [\n      this.genHeader(),\n      h(VExpandTransition, [this.genItems()]),\n    ])\n  },\n})\n"],"sourceRoot":""}]}