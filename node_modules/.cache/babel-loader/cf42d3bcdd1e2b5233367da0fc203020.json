{"remainingRequest":"C:\\Users\\Acer\\Desktop\\pmm\\pm25-vue\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Acer\\Desktop\\pmm\\pm25-vue\\node_modules\\vuetify\\lib\\mixins\\detachable\\index.js","dependencies":[{"path":"C:\\Users\\Acer\\Desktop\\pmm\\pm25-vue\\node_modules\\vuetify\\lib\\mixins\\detachable\\index.js","mtime":499162500000},{"path":"C:\\Users\\Acer\\Desktop\\pmm\\pm25-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Acer\\Desktop\\pmm\\pm25-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["// Mixins\nimport Bootable from '../bootable'; // Utilities\n\nimport { getObjectValueByPath } from '../../util/helpers';\nimport mixins from '../../util/mixins';\nimport { consoleWarn } from '../../util/console';\n\nfunction validateAttachTarget(val) {\n  const type = typeof val;\n  if (type === 'boolean' || type === 'string') return true;\n  return val.nodeType === Node.ELEMENT_NODE;\n}\n/* @vue/component */\n\n\nexport default mixins(Bootable).extend({\n  name: 'detachable',\n  props: {\n    attach: {\n      default: false,\n      validator: validateAttachTarget\n    },\n    contentClass: {\n      type: String,\n      default: ''\n    }\n  },\n  data: () => ({\n    activatorNode: null,\n    hasDetached: false\n  }),\n  watch: {\n    attach() {\n      this.hasDetached = false;\n      this.initDetach();\n    },\n\n    hasContent: 'initDetach'\n  },\n\n  beforeMount() {\n    this.$nextTick(() => {\n      if (this.activatorNode) {\n        const activator = Array.isArray(this.activatorNode) ? this.activatorNode : [this.activatorNode];\n        activator.forEach(node => {\n          if (!node.elm) return;\n          if (!this.$el.parentNode) return;\n          const target = this.$el === this.$el.parentNode.firstChild ? this.$el : this.$el.nextSibling;\n          this.$el.parentNode.insertBefore(node.elm, target);\n        });\n      }\n    });\n  },\n\n  mounted() {\n    this.hasContent && this.initDetach();\n  },\n\n  deactivated() {\n    this.isActive = false;\n  },\n\n  beforeDestroy() {\n    // IE11 Fix\n    try {\n      if (this.$refs.content && this.$refs.content.parentNode) {\n        this.$refs.content.parentNode.removeChild(this.$refs.content);\n      }\n\n      if (this.activatorNode) {\n        const activator = Array.isArray(this.activatorNode) ? this.activatorNode : [this.activatorNode];\n        activator.forEach(node => {\n          node.elm && node.elm.parentNode && node.elm.parentNode.removeChild(node.elm);\n        });\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  },\n\n  methods: {\n    getScopeIdAttrs() {\n      const scopeId = getObjectValueByPath(this.$vnode, 'context.$options._scopeId');\n      return scopeId && {\n        [scopeId]: ''\n      };\n    },\n\n    initDetach() {\n      if (this._isDestroyed || !this.$refs.content || this.hasDetached || // Leave menu in place if attached\n      // and dev has not changed target\n      this.attach === '' || // If used as a boolean prop (<v-menu attach>)\n      this.attach === true || // If bound to a boolean (<v-menu :attach=\"true\">)\n      this.attach === 'attach' // If bound as boolean prop in pug (v-menu(attach))\n      ) return;\n      let target;\n\n      if (this.attach === false) {\n        // Default, detach to app\n        target = document.querySelector('[data-app]');\n      } else if (typeof this.attach === 'string') {\n        // CSS selector\n        target = document.querySelector(this.attach);\n      } else {\n        // DOM Element\n        target = this.attach;\n      }\n\n      if (!target) {\n        consoleWarn(`Unable to locate target ${this.attach || '[data-app]'}`, this);\n        return;\n      }\n\n      target.insertBefore(this.$refs.content, target.firstChild);\n      this.hasDetached = true;\n    }\n\n  }\n});",{"version":3,"sources":["../../../src/mixins/detachable/index.ts"],"names":[],"mappings":"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","sourcesContent":["// Mixins\nimport Bootable from '../bootable'\n\n// Utilities\nimport { getObjectValueByPath } from '../../util/helpers'\nimport mixins, { ExtractVue } from '../../util/mixins'\nimport { consoleWarn } from '../../util/console'\n\n// Types\nimport Vue, { PropOptions } from 'vue'\nimport { VNode } from 'vue/types'\n\ninterface options extends Vue {\n  $el: HTMLElement\n  $refs: {\n    content: HTMLElement\n  }\n}\n\nfunction validateAttachTarget (val: any) {\n  const type = typeof val\n\n  if (type === 'boolean' || type === 'string') return true\n\n  return val.nodeType === Node.ELEMENT_NODE\n}\n\n/* @vue/component */\nexport default mixins<options &\n  /* eslint-disable indent */\n  ExtractVue<typeof Bootable>\n  /* eslint-enable indent */\n>(Bootable).extend({\n  name: 'detachable',\n\n  props: {\n    attach: {\n      default: false,\n      validator: validateAttachTarget,\n    } as PropOptions<boolean | string | Element>,\n    contentClass: {\n      type: String,\n      default: '',\n    },\n  },\n\n  data: () => ({\n    activatorNode: null as null | VNode | VNode[],\n    hasDetached: false,\n  }),\n\n  watch: {\n    attach () {\n      this.hasDetached = false\n      this.initDetach()\n    },\n    hasContent: 'initDetach',\n  },\n\n  beforeMount () {\n    this.$nextTick(() => {\n      if (this.activatorNode) {\n        const activator = Array.isArray(this.activatorNode) ? this.activatorNode : [this.activatorNode]\n\n        activator.forEach(node => {\n          if (!node.elm) return\n          if (!this.$el.parentNode) return\n\n          const target = this.$el === this.$el.parentNode.firstChild\n            ? this.$el\n            : this.$el.nextSibling\n\n          this.$el.parentNode.insertBefore(node.elm, target)\n        })\n      }\n    })\n  },\n\n  mounted () {\n    this.hasContent && this.initDetach()\n  },\n\n  deactivated () {\n    this.isActive = false\n  },\n\n  beforeDestroy () {\n    // IE11 Fix\n    try {\n      if (\n        this.$refs.content &&\n        this.$refs.content.parentNode\n      ) {\n        this.$refs.content.parentNode.removeChild(this.$refs.content)\n      }\n\n      if (this.activatorNode) {\n        const activator = Array.isArray(this.activatorNode) ? this.activatorNode : [this.activatorNode]\n        activator.forEach(node => {\n          node.elm &&\n            node.elm.parentNode &&\n            node.elm.parentNode.removeChild(node.elm)\n        })\n      }\n    } catch (e) { console.log(e) }\n  },\n\n  methods: {\n    getScopeIdAttrs () {\n      const scopeId = getObjectValueByPath(this.$vnode, 'context.$options._scopeId')\n\n      return scopeId && {\n        [scopeId]: '',\n      }\n    },\n    initDetach () {\n      if (this._isDestroyed ||\n        !this.$refs.content ||\n        this.hasDetached ||\n        // Leave menu in place if attached\n        // and dev has not changed target\n        this.attach === '' || // If used as a boolean prop (<v-menu attach>)\n        this.attach === true || // If bound to a boolean (<v-menu :attach=\"true\">)\n        this.attach === 'attach' // If bound as boolean prop in pug (v-menu(attach))\n      ) return\n\n      let target\n      if (this.attach === false) {\n        // Default, detach to app\n        target = document.querySelector('[data-app]')\n      } else if (typeof this.attach === 'string') {\n        // CSS selector\n        target = document.querySelector(this.attach)\n      } else {\n        // DOM Element\n        target = this.attach\n      }\n\n      if (!target) {\n        consoleWarn(`Unable to locate target ${this.attach || '[data-app]'}`, this)\n        return\n      }\n\n      target.insertBefore(\n        this.$refs.content,\n        target.firstChild\n      )\n\n      this.hasDetached = true\n    },\n  },\n})\n"],"sourceRoot":""}]}