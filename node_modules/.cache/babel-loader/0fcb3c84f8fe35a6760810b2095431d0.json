{"remainingRequest":"C:\\Users\\Acer\\Desktop\\pmm\\pm25-vue\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Acer\\Desktop\\pmm\\pm25-vue\\node_modules\\vuetify\\lib\\directives\\resize\\index.js","dependencies":[{"path":"C:\\Users\\Acer\\Desktop\\pmm\\pm25-vue\\node_modules\\vuetify\\lib\\directives\\resize\\index.js","mtime":499162500000},{"path":"C:\\Users\\Acer\\Desktop\\pmm\\pm25-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Acer\\Desktop\\pmm\\pm25-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["function inserted(el, binding) {\n  const callback = binding.value;\n  const options = binding.options || {\n    passive: true\n  };\n  window.addEventListener('resize', callback, options);\n  el._onResize = {\n    callback,\n    options\n  };\n\n  if (!binding.modifiers || !binding.modifiers.quiet) {\n    callback();\n  }\n}\n\nfunction unbind(el) {\n  if (!el._onResize) return;\n  const {\n    callback,\n    options\n  } = el._onResize;\n  window.removeEventListener('resize', callback, options);\n  delete el._onResize;\n}\n\nexport const Resize = {\n  inserted,\n  unbind\n};\nexport default Resize;",{"version":3,"sources":["../../../src/directives/resize/index.ts"],"names":[],"mappings":"AAOA,SAAA,QAAA,CAAA,EAAA,EAAA,OAAA,EAAiE;AAC/D,QAAM,QAAQ,GAAG,OAAO,CAAxB,KAAA;AACA,QAAM,OAAO,GAAG,OAAO,CAAP,OAAA,IAAmB;AAAE,IAAA,OAAO,EAAE;AAAX,GAAnC;AAEA,EAAA,MAAM,CAAN,gBAAA,CAAA,QAAA,EAAA,QAAA,EAAA,OAAA;AACA,EAAA,EAAE,CAAF,SAAA,GAAe;AAAA,IAAA,QAAA;AAEb,IAAA;AAFa,GAAf;;AAKA,MAAI,CAAC,OAAO,CAAR,SAAA,IAAsB,CAAC,OAAO,CAAP,SAAA,CAA3B,KAAA,EAAoD;AAClD,IAAA,QAAQ;AACT;AACF;;AAED,SAAA,MAAA,CAAA,EAAA,EAAgC;AAC9B,MAAI,CAAC,EAAE,CAAP,SAAA,EAAmB;AAEnB,QAAM;AAAA,IAAA,QAAA;AAAY,IAAA;AAAZ,MAAwB,EAAE,CAAhC,SAAA;AACA,EAAA,MAAM,CAAN,mBAAA,CAAA,QAAA,EAAA,QAAA,EAAA,OAAA;AACA,SAAO,EAAE,CAAT,SAAA;AACD;;AAED,OAAO,MAAM,MAAM,GAAG;AAAA,EAAA,QAAA;AAEpB,EAAA;AAFoB,CAAf;AAKP,eAAA,MAAA","sourcesContent":["import { VNodeDirective } from 'vue/types/vnode'\n\ninterface ResizeVNodeDirective extends VNodeDirective {\n  value?: () => void\n  options?: boolean | AddEventListenerOptions\n}\n\nfunction inserted (el: HTMLElement, binding: ResizeVNodeDirective) {\n  const callback = binding.value!\n  const options = binding.options || { passive: true }\n\n  window.addEventListener('resize', callback, options)\n  el._onResize = {\n    callback,\n    options,\n  }\n\n  if (!binding.modifiers || !binding.modifiers.quiet) {\n    callback()\n  }\n}\n\nfunction unbind (el: HTMLElement) {\n  if (!el._onResize) return\n\n  const { callback, options } = el._onResize\n  window.removeEventListener('resize', callback, options)\n  delete el._onResize\n}\n\nexport const Resize = {\n  inserted,\n  unbind,\n}\n\nexport default Resize\n"],"sourceRoot":""}]}