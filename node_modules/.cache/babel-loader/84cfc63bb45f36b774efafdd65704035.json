{"remainingRequest":"C:\\Users\\Acer\\Desktop\\pmm\\pm25-vue\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Acer\\Desktop\\pmm\\pm25-vue\\node_modules\\vuetify\\lib\\services\\goto\\easing-patterns.js","dependencies":[{"path":"C:\\Users\\Acer\\Desktop\\pmm\\pm25-vue\\node_modules\\vuetify\\lib\\services\\goto\\easing-patterns.js","mtime":499162500000},{"path":"C:\\Users\\Acer\\Desktop\\pmm\\pm25-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Acer\\Desktop\\pmm\\pm25-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["// linear\nexport const linear = t => t; // accelerating from zero velocity\n\nexport const easeInQuad = t => t ** 2; // decelerating to zero velocity\n\nexport const easeOutQuad = t => t * (2 - t); // acceleration until halfway, then deceleration\n\nexport const easeInOutQuad = t => t < 0.5 ? 2 * t ** 2 : -1 + (4 - 2 * t) * t; // accelerating from zero velocity\n\nexport const easeInCubic = t => t ** 3; // decelerating to zero velocity\n\nexport const easeOutCubic = t => --t ** 3 + 1; // acceleration until halfway, then deceleration\n\nexport const easeInOutCubic = t => t < 0.5 ? 4 * t ** 3 : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1; // accelerating from zero velocity\n\nexport const easeInQuart = t => t ** 4; // decelerating to zero velocity\n\nexport const easeOutQuart = t => 1 - --t ** 4; // acceleration until halfway, then deceleration\n\nexport const easeInOutQuart = t => t < 0.5 ? 8 * t * t * t * t : 1 - 8 * --t * t * t * t; // accelerating from zero velocity\n\nexport const easeInQuint = t => t ** 5; // decelerating to zero velocity\n\nexport const easeOutQuint = t => 1 + --t ** 5; // acceleration until halfway, then deceleration\n\nexport const easeInOutQuint = t => t < 0.5 ? 16 * t ** 5 : 1 + 16 * --t ** 5;",{"version":3,"sources":["../../../src/services/goto/easing-patterns.ts"],"names":[],"mappings":"AAEA;AACA,OAAO,MAAM,MAAM,GAAI,CAAD,IAAf,CAAA,C,CACP;;AACA,OAAO,MAAM,UAAU,GAAI,CAAD,IAAe,CAAC,IAAnC,CAAA,C,CACP;;AACA,OAAO,MAAM,WAAW,GAAI,CAAD,IAAe,CAAC,IAAI,IAAxC,CAAoC,CAApC,C,CACP;;AACA,OAAO,MAAM,aAAa,GAAI,CAAD,IAAgB,CAAC,GAAD,GAAA,GAAU,IAAI,CAAC,IAAf,CAAA,GAAuB,CAAA,CAAA,GAAK,CAAC,IAAI,IAAL,CAAA,IAAlE,CAAA,C,CACP;;AACA,OAAO,MAAM,WAAW,GAAI,CAAD,IAAe,CAAC,IAApC,CAAA,C,CACP;;AACA,OAAO,MAAM,YAAY,GAAI,CAAD,IAAe,EAAA,CAAA,IAAA,CAAA,GAApC,CAAA,C,CACP;;AACA,OAAO,MAAM,cAAc,GAAI,CAAD,IAAe,CAAC,GAAD,GAAA,GAAU,IAAI,CAAC,IAAf,CAAA,GAAuB,CAAC,CAAC,GAAF,CAAA,KAAW,IAAA,CAAA,GAAX,CAAA,KAAyB,IAAA,CAAA,GAAzB,CAAA,IAA7D,CAAA,C,CACP;;AACA,OAAO,MAAM,WAAW,GAAI,CAAD,IAAe,CAAC,IAApC,CAAA,C,CACP;;AACA,OAAO,MAAM,YAAY,GAAI,CAAD,IAAe,IAAI,EAAA,CAAA,IAAxC,CAAA,C,CACP;;AACA,OAAO,MAAM,cAAc,GAAI,CAAD,IAAgB,CAAC,GAAD,GAAA,GAAU,IAAA,CAAA,GAAA,CAAA,GAAA,CAAA,GAAV,CAAA,GAA8B,IAAI,IAAI,EAAJ,CAAA,GAAA,CAAA,GAAA,CAAA,GAAzE,CAAA,C,CACP;;AACA,OAAO,MAAM,WAAW,GAAI,CAAD,IAAe,CAAC,IAApC,CAAA,C,CACP;;AACA,OAAO,MAAM,YAAY,GAAI,CAAD,IAAe,IAAI,EAAA,CAAA,IAAxC,CAAA,C,CACP;;AACA,OAAO,MAAM,cAAc,GAAI,CAAD,IAAe,CAAC,GAAD,GAAA,GAAU,KAAK,CAAC,IAAhB,CAAA,GAAwB,IAAI,KAAK,EAAA,CAAA,IAAvE,CAAA","sourcesContent":["export type EasingFunction = (t: number) => number\n\n// linear\nexport const linear = (t: number) => t\n// accelerating from zero velocity\nexport const easeInQuad = (t: number) => t ** 2\n// decelerating to zero velocity\nexport const easeOutQuad = (t: number) => t * (2 - t)\n// acceleration until halfway, then deceleration\nexport const easeInOutQuad = (t: number) => (t < 0.5 ? 2 * t ** 2 : -1 + (4 - 2 * t) * t)\n// accelerating from zero velocity\nexport const easeInCubic = (t: number) => t ** 3\n// decelerating to zero velocity\nexport const easeOutCubic = (t: number) => --t ** 3 + 1\n// acceleration until halfway, then deceleration\nexport const easeInOutCubic = (t: number) => t < 0.5 ? 4 * t ** 3 : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1\n// accelerating from zero velocity\nexport const easeInQuart = (t: number) => t ** 4\n// decelerating to zero velocity\nexport const easeOutQuart = (t: number) => 1 - --t ** 4\n// acceleration until halfway, then deceleration\nexport const easeInOutQuart = (t: number) => (t < 0.5 ? 8 * t * t * t * t : 1 - 8 * --t * t * t * t)\n// accelerating from zero velocity\nexport const easeInQuint = (t: number) => t ** 5\n// decelerating to zero velocity\nexport const easeOutQuint = (t: number) => 1 + --t ** 5\n// acceleration until halfway, then deceleration\nexport const easeInOutQuint = (t: number) => t < 0.5 ? 16 * t ** 5 : 1 + 16 * --t ** 5\n"],"sourceRoot":""}]}