{"remainingRequest":"C:\\Users\\Acer\\Desktop\\pmm\\pm25-vue\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Acer\\Desktop\\pmm\\pm25-vue\\node_modules\\vuetify\\lib\\util\\ThemeProvider.js","dependencies":[{"path":"C:\\Users\\Acer\\Desktop\\pmm\\pm25-vue\\node_modules\\vuetify\\lib\\util\\ThemeProvider.js","mtime":499162500000},{"path":"C:\\Users\\Acer\\Desktop\\pmm\\pm25-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Acer\\Desktop\\pmm\\pm25-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import Themeable from '../mixins/themeable';\nimport mixins from './mixins';\n/* @vue/component */\n\nexport default mixins(Themeable).extend({\n  name: 'theme-provider',\n  props: {\n    root: Boolean\n  },\n  computed: {\n    isDark() {\n      return this.root ? this.rootIsDark : Themeable.options.computed.isDark.call(this);\n    }\n\n  },\n\n  render() {\n    return this.$slots.default && this.$slots.default.find(node => !node.isComment && node.text !== ' ');\n  }\n\n});",{"version":3,"sources":["../../src/util/ThemeProvider.ts"],"names":[],"mappings":"AACA,OAAA,SAAA,MAAA,qBAAA;AACA,OAAA,MAAA,MAAA,UAAA;AAEA;;AACA,eAAe,MAAM,CAAN,SAAM,CAAN,CAAA,MAAA,CAAyB;AACtC,EAAA,IAAI,EADkC,gBAAA;AAGtC,EAAA,KAAK,EAAE;AACL,IAAA,IAAI,EAAE;AADD,GAH+B;AAOtC,EAAA,QAAQ,EAAE;AACR,IAAA,MAAM,GAAA;AACJ,aAAO,KAAA,IAAA,GAAY,KAAZ,UAAA,GAA8B,SAAS,CAAT,OAAA,CAAA,QAAA,CAAA,MAAA,CAAA,IAAA,CAArC,IAAqC,CAArC;AACD;;AAHO,GAP4B;;AAatC,EAAA,MAAM,GAAA;AACJ,WAAO,KAAA,MAAA,CAAA,OAAA,IAAwB,KAAA,MAAA,CAAA,OAAA,CAAA,IAAA,CAA0B,IAAI,IAAI,CAAC,IAAI,CAAL,SAAA,IAAmB,IAAI,CAAJ,IAAA,KAApF,GAA+B,CAA/B;AACD;;AAfqC,CAAzB,CAAf","sourcesContent":["import { VNode } from 'vue'\nimport Themeable from '../mixins/themeable'\nimport mixins from './mixins'\n\n/* @vue/component */\nexport default mixins(Themeable).extend({\n  name: 'theme-provider',\n\n  props: {\n    root: Boolean,\n  },\n\n  computed: {\n    isDark (): boolean {\n      return this.root ? this.rootIsDark : Themeable.options.computed.isDark.call(this)\n    },\n  },\n\n  render (): VNode {\n    return this.$slots.default! && this.$slots.default!.find(node => !node.isComment && node.text !== ' ')!\n  },\n})\n"],"sourceRoot":""}]}