{"remainingRequest":"C:\\Users\\Acer\\Desktop\\pmm\\pm25-vue\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Acer\\Desktop\\pmm\\pm25-vue\\node_modules\\vuetify\\lib\\components\\VAlert\\VAlert.js","dependencies":[{"path":"C:\\Users\\Acer\\Desktop\\pmm\\pm25-vue\\node_modules\\vuetify\\lib\\components\\VAlert\\VAlert.js","mtime":499162500000},{"path":"C:\\Users\\Acer\\Desktop\\pmm\\pm25-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Acer\\Desktop\\pmm\\pm25-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["// Styles\nimport \"../../../src/components/VAlert/VAlert.sass\"; // Extensions\n\nimport VSheet from '../VSheet'; // Components\n\nimport VBtn from '../VBtn';\nimport VIcon from '../VIcon'; // Mixins\n\nimport Toggleable from '../../mixins/toggleable';\nimport Themeable from '../../mixins/themeable';\nimport Transitionable from '../../mixins/transitionable'; // Utilities\n\nimport mixins from '../../util/mixins';\nimport { breaking } from '../../util/console';\n/* @vue/component */\n\nexport default mixins(VSheet, Toggleable, Transitionable).extend({\n  name: 'v-alert',\n  props: {\n    border: {\n      type: String,\n\n      validator(val) {\n        return ['top', 'right', 'bottom', 'left'].includes(val);\n      }\n\n    },\n    closeLabel: {\n      type: String,\n      default: '$vuetify.close'\n    },\n    coloredBorder: Boolean,\n    dense: Boolean,\n    dismissible: Boolean,\n    icon: {\n      default: '',\n      type: [Boolean, String],\n\n      validator(val) {\n        return typeof val === 'string' || val === false;\n      }\n\n    },\n    outlined: Boolean,\n    prominent: Boolean,\n    text: Boolean,\n    type: {\n      type: String,\n\n      validator(val) {\n        return ['info', 'error', 'success', 'warning'].includes(val);\n      }\n\n    },\n    value: {\n      type: Boolean,\n      default: true\n    }\n  },\n  computed: {\n    __cachedBorder() {\n      if (!this.border) return null;\n      let data = {\n        staticClass: 'v-alert__border',\n        class: {\n          [`v-alert__border--${this.border}`]: true\n        }\n      };\n\n      if (this.coloredBorder) {\n        data = this.setBackgroundColor(this.computedColor, data);\n        data.class['v-alert__border--has-color'] = true;\n      }\n\n      return this.$createElement('div', data);\n    },\n\n    __cachedDismissible() {\n      if (!this.dismissible) return null;\n      const color = this.iconColor;\n      return this.$createElement(VBtn, {\n        staticClass: 'v-alert__dismissible',\n        props: {\n          color,\n          icon: true,\n          small: true\n        },\n        attrs: {\n          'aria-label': this.$vuetify.lang.t(this.closeLabel)\n        },\n        on: {\n          click: () => this.isActive = false\n        }\n      }, [this.$createElement(VIcon, {\n        props: {\n          color\n        }\n      }, '$cancel')]);\n    },\n\n    __cachedIcon() {\n      if (!this.computedIcon) return null;\n      return this.$createElement(VIcon, {\n        staticClass: 'v-alert__icon',\n        props: {\n          color: this.iconColor\n        }\n      }, this.computedIcon);\n    },\n\n    classes() {\n      const classes = { ...VSheet.options.computed.classes.call(this),\n        'v-alert--border': Boolean(this.border),\n        'v-alert--dense': this.dense,\n        'v-alert--outlined': this.outlined,\n        'v-alert--prominent': this.prominent,\n        'v-alert--text': this.text\n      };\n\n      if (this.border) {\n        classes[`v-alert--border-${this.border}`] = true;\n      }\n\n      return classes;\n    },\n\n    computedColor() {\n      return this.color || this.type;\n    },\n\n    computedIcon() {\n      if (this.icon === false) return false;\n      if (typeof this.icon === 'string' && this.icon) return this.icon;\n      if (!['error', 'info', 'success', 'warning'].includes(this.type)) return false;\n      return `$${this.type}`;\n    },\n\n    hasColoredIcon() {\n      return this.hasText || Boolean(this.border) && this.coloredBorder;\n    },\n\n    hasText() {\n      return this.text || this.outlined;\n    },\n\n    iconColor() {\n      return this.hasColoredIcon ? this.computedColor : undefined;\n    },\n\n    isDark() {\n      if (this.type && !this.coloredBorder && !this.outlined) return true;\n      return Themeable.options.computed.isDark.call(this);\n    }\n\n  },\n\n  created() {\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('outline')) {\n      breaking('outline', 'outlined', this);\n    }\n  },\n\n  methods: {\n    genWrapper() {\n      const children = [this.$slots.prepend || this.__cachedIcon, this.genContent(), this.__cachedBorder, this.$slots.append, this.$scopedSlots.close ? this.$scopedSlots.close({\n        toggle: this.toggle\n      }) : this.__cachedDismissible];\n      const data = {\n        staticClass: 'v-alert__wrapper'\n      };\n      return this.$createElement('div', data, children);\n    },\n\n    genContent() {\n      return this.$createElement('div', {\n        staticClass: 'v-alert__content'\n      }, this.$slots.default);\n    },\n\n    genAlert() {\n      let data = {\n        staticClass: 'v-alert',\n        attrs: {\n          role: 'alert'\n        },\n        class: this.classes,\n        style: this.styles,\n        directives: [{\n          name: 'show',\n          value: this.isActive\n        }]\n      };\n\n      if (!this.coloredBorder) {\n        const setColor = this.hasText ? this.setTextColor : this.setBackgroundColor;\n        data = setColor(this.computedColor, data);\n      }\n\n      return this.$createElement('div', data, [this.genWrapper()]);\n    },\n\n    /** @public */\n    toggle() {\n      this.isActive = !this.isActive;\n    }\n\n  },\n\n  render(h) {\n    const render = this.genAlert();\n    if (!this.transition) return render;\n    return h('transition', {\n      props: {\n        name: this.transition,\n        origin: this.origin,\n        mode: this.mode\n      }\n    }, [render]);\n  }\n\n});",{"version":3,"sources":["../../../src/components/VAlert/VAlert.ts"],"names":[],"mappings":"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","sourcesContent":["// Styles\nimport './VAlert.sass'\n\n// Extensions\nimport VSheet from '../VSheet'\n\n// Components\nimport VBtn from '../VBtn'\nimport VIcon from '../VIcon'\n\n// Mixins\nimport Toggleable from '../../mixins/toggleable'\nimport Themeable from '../../mixins/themeable'\nimport Transitionable from '../../mixins/transitionable'\n\n// Utilities\nimport mixins from '../../util/mixins'\nimport { breaking } from '../../util/console'\n\n// Types\nimport { VNodeData } from 'vue'\nimport { VNode } from 'vue/types'\n\n/* @vue/component */\nexport default mixins(\n  VSheet,\n  Toggleable,\n  Transitionable\n).extend({\n  name: 'v-alert',\n\n  props: {\n    border: {\n      type: String,\n      validator (val: string) {\n        return [\n          'top',\n          'right',\n          'bottom',\n          'left',\n        ].includes(val)\n      },\n    },\n    closeLabel: {\n      type: String,\n      default: '$vuetify.close',\n    },\n    coloredBorder: Boolean,\n    dense: Boolean,\n    dismissible: Boolean,\n    icon: {\n      default: '',\n      type: [Boolean, String],\n      validator (val: boolean | string) {\n        return typeof val === 'string' || val === false\n      },\n    },\n    outlined: Boolean,\n    prominent: Boolean,\n    text: Boolean,\n    type: {\n      type: String,\n      validator (val: string) {\n        return [\n          'info',\n          'error',\n          'success',\n          'warning',\n        ].includes(val)\n      },\n    },\n    value: {\n      type: Boolean,\n      default: true,\n    },\n  },\n\n  computed: {\n    __cachedBorder (): VNode | null {\n      if (!this.border) return null\n\n      let data: VNodeData = {\n        staticClass: 'v-alert__border',\n        class: {\n          [`v-alert__border--${this.border}`]: true,\n        },\n      }\n\n      if (this.coloredBorder) {\n        data = this.setBackgroundColor(this.computedColor, data)\n        data.class['v-alert__border--has-color'] = true\n      }\n\n      return this.$createElement('div', data)\n    },\n    __cachedDismissible (): VNode | null {\n      if (!this.dismissible) return null\n\n      const color = this.iconColor\n\n      return this.$createElement(VBtn, {\n        staticClass: 'v-alert__dismissible',\n        props: {\n          color,\n          icon: true,\n          small: true,\n        },\n        attrs: {\n          'aria-label': this.$vuetify.lang.t(this.closeLabel),\n        },\n        on: {\n          click: () => (this.isActive = false),\n        },\n      }, [\n        this.$createElement(VIcon, {\n          props: { color },\n        }, '$cancel'),\n      ])\n    },\n    __cachedIcon (): VNode | null {\n      if (!this.computedIcon) return null\n\n      return this.$createElement(VIcon, {\n        staticClass: 'v-alert__icon',\n        props: { color: this.iconColor },\n      }, this.computedIcon)\n    },\n    classes (): object {\n      const classes: Record<string, boolean> = {\n        ...VSheet.options.computed.classes.call(this),\n        'v-alert--border': Boolean(this.border),\n        'v-alert--dense': this.dense,\n        'v-alert--outlined': this.outlined,\n        'v-alert--prominent': this.prominent,\n        'v-alert--text': this.text,\n      }\n\n      if (this.border) {\n        classes[`v-alert--border-${this.border}`] = true\n      }\n\n      return classes\n    },\n    computedColor (): string {\n      return this.color || this.type\n    },\n    computedIcon (): string | boolean {\n      if (this.icon === false) return false\n      if (typeof this.icon === 'string' && this.icon) return this.icon\n      if (!['error', 'info', 'success', 'warning'].includes(this.type)) return false\n\n      return `$${this.type}`\n    },\n    hasColoredIcon (): boolean {\n      return (\n        this.hasText ||\n        (Boolean(this.border) && this.coloredBorder)\n      )\n    },\n    hasText (): boolean {\n      return this.text || this.outlined\n    },\n    iconColor (): string | undefined {\n      return this.hasColoredIcon ? this.computedColor : undefined\n    },\n    isDark (): boolean {\n      if (\n        this.type &&\n        !this.coloredBorder &&\n        !this.outlined\n      ) return true\n\n      return Themeable.options.computed.isDark.call(this)\n    },\n  },\n\n  created () {\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('outline')) {\n      breaking('outline', 'outlined', this)\n    }\n  },\n\n  methods: {\n    genWrapper (): VNode {\n      const children = [\n        this.$slots.prepend || this.__cachedIcon,\n        this.genContent(),\n        this.__cachedBorder,\n        this.$slots.append,\n        this.$scopedSlots.close\n          ? this.$scopedSlots.close({ toggle: this.toggle })\n          : this.__cachedDismissible,\n      ]\n\n      const data: VNodeData = {\n        staticClass: 'v-alert__wrapper',\n      }\n\n      return this.$createElement('div', data, children)\n    },\n    genContent (): VNode {\n      return this.$createElement('div', {\n        staticClass: 'v-alert__content',\n      }, this.$slots.default)\n    },\n    genAlert (): VNode {\n      let data: VNodeData = {\n        staticClass: 'v-alert',\n        attrs: {\n          role: 'alert',\n        },\n        class: this.classes,\n        style: this.styles,\n        directives: [{\n          name: 'show',\n          value: this.isActive,\n        }],\n      }\n\n      if (!this.coloredBorder) {\n        const setColor = this.hasText ? this.setTextColor : this.setBackgroundColor\n        data = setColor(this.computedColor, data)\n      }\n\n      return this.$createElement('div', data, [this.genWrapper()])\n    },\n    /** @public */\n    toggle () {\n      this.isActive = !this.isActive\n    },\n  },\n\n  render (h): VNode {\n    const render = this.genAlert()\n\n    if (!this.transition) return render\n\n    return h('transition', {\n      props: {\n        name: this.transition,\n        origin: this.origin,\n        mode: this.mode,\n      },\n    }, [render])\n  },\n})\n"],"sourceRoot":""}]}