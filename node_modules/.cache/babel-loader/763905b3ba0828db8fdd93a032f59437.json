{"remainingRequest":"C:\\Users\\Acer\\Desktop\\pmm\\pm25-vue\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Acer\\Desktop\\pmm\\pm25-vue\\node_modules\\vuetify\\lib\\components\\VBanner\\VBanner.js","dependencies":[{"path":"C:\\Users\\Acer\\Desktop\\pmm\\pm25-vue\\node_modules\\vuetify\\lib\\components\\VBanner\\VBanner.js","mtime":499162500000},{"path":"C:\\Users\\Acer\\Desktop\\pmm\\pm25-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Acer\\Desktop\\pmm\\pm25-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["// Styles\nimport \"../../../src/components/VBanner/VBanner.sass\"; // Extensions\n\nimport VSheet from '../VSheet'; // Components\n\nimport VAvatar from '../VAvatar';\nimport VIcon from '../VIcon';\nimport { VExpandTransition } from '../transitions'; // Mixins\n\nimport Toggleable from '../../mixins/toggleable'; // Utilities\n\nimport mixins from '../../util/mixins';\nimport { convertToUnit, getSlot } from '../../util/helpers';\n/* @vue/component */\n\nexport default mixins(VSheet, Toggleable).extend({\n  name: 'v-banner',\n  inheritAttrs: false,\n  props: {\n    app: Boolean,\n    icon: String,\n    iconColor: String,\n    mobileBreakPoint: {\n      type: [Number, String],\n      default: 960\n    },\n    singleLine: Boolean,\n    sticky: Boolean,\n    tile: {\n      type: Boolean,\n      default: true\n    },\n    value: {\n      type: Boolean,\n      default: true\n    }\n  },\n  computed: {\n    classes() {\n      return { ...VSheet.options.computed.classes.call(this),\n        'v-banner--has-icon': this.hasIcon,\n        'v-banner--is-mobile': this.isMobile,\n        'v-banner--single-line': this.singleLine,\n        'v-banner--sticky': this.isSticky\n      };\n    },\n\n    hasIcon() {\n      return Boolean(this.icon || this.$slots.icon);\n    },\n\n    isMobile() {\n      return this.$vuetify.breakpoint.width < Number(this.mobileBreakPoint);\n    },\n\n    isSticky() {\n      return this.sticky || this.app;\n    },\n\n    styles() {\n      const styles = { ...VSheet.options.computed.styles.call(this)\n      };\n\n      if (this.isSticky) {\n        const top = !this.app ? 0 : this.$vuetify.application.bar + this.$vuetify.application.top;\n        styles.top = convertToUnit(top);\n        styles.position = 'sticky';\n        styles.zIndex = 1;\n      }\n\n      return styles;\n    }\n\n  },\n  methods: {\n    /** @public */\n    toggle() {\n      this.isActive = !this.isActive;\n    },\n\n    iconClick(e) {\n      this.$emit('click:icon', e);\n    },\n\n    genIcon() {\n      if (!this.hasIcon) return undefined;\n      let content;\n\n      if (this.icon) {\n        content = this.$createElement(VIcon, {\n          props: {\n            color: this.iconColor,\n            size: 28\n          }\n        }, [this.icon]);\n      } else {\n        content = this.$slots.icon;\n      }\n\n      return this.$createElement(VAvatar, {\n        staticClass: 'v-banner__icon',\n        props: {\n          color: this.color,\n          size: 40\n        },\n        on: {\n          click: this.iconClick\n        }\n      }, [content]);\n    },\n\n    genText() {\n      return this.$createElement('div', {\n        staticClass: 'v-banner__text'\n      }, this.$slots.default);\n    },\n\n    genActions() {\n      const children = getSlot(this, 'actions', {\n        dismiss: () => this.isActive = false\n      });\n      if (!children) return undefined;\n      return this.$createElement('div', {\n        staticClass: 'v-banner__actions'\n      }, children);\n    },\n\n    genContent() {\n      return this.$createElement('div', {\n        staticClass: 'v-banner__content'\n      }, [this.genIcon(), this.genText()]);\n    },\n\n    genWrapper() {\n      return this.$createElement('div', {\n        staticClass: 'v-banner__wrapper'\n      }, [this.genContent(), this.genActions()]);\n    }\n\n  },\n\n  render(h) {\n    return h(VExpandTransition, [h('div', {\n      staticClass: 'v-banner',\n      attrs: this.attrs$,\n      class: this.classes,\n      style: this.styles,\n      directives: [{\n        name: 'show',\n        value: this.isActive\n      }]\n    }, [this.genWrapper()])]);\n  }\n\n});",{"version":3,"sources":["../../../src/components/VBanner/VBanner.ts"],"names":[],"mappings":"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","sourcesContent":["// Styles\nimport './VBanner.sass'\n\n// Extensions\nimport VSheet from '../VSheet'\n\n// Components\nimport VAvatar from '../VAvatar'\nimport VIcon from '../VIcon'\nimport { VExpandTransition } from '../transitions'\n\n// Mixins\nimport Toggleable from '../../mixins/toggleable'\n\n// Utilities\nimport mixins from '../../util/mixins'\nimport {\n  convertToUnit,\n  getSlot,\n} from '../../util/helpers'\n\n// Types\nimport { VNode } from 'vue/types'\nimport { PropValidator } from 'vue/types/options'\n\n/* @vue/component */\nexport default mixins(\n  VSheet,\n  Toggleable\n).extend({\n  name: 'v-banner',\n\n  inheritAttrs: false,\n\n  props: {\n    app: Boolean,\n    icon: String,\n    iconColor: String,\n    mobileBreakPoint: {\n      type: [Number, String],\n      default: 960,\n    } as PropValidator<string | number>,\n    singleLine: Boolean,\n    sticky: Boolean,\n    tile: {\n      type: Boolean,\n      default: true,\n    },\n    value: {\n      type: Boolean,\n      default: true,\n    },\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...VSheet.options.computed.classes.call(this),\n        'v-banner--has-icon': this.hasIcon,\n        'v-banner--is-mobile': this.isMobile,\n        'v-banner--single-line': this.singleLine,\n        'v-banner--sticky': this.isSticky,\n      }\n    },\n    hasIcon (): boolean {\n      return Boolean(this.icon || this.$slots.icon)\n    },\n    isMobile (): boolean {\n      return this.$vuetify.breakpoint.width < Number(this.mobileBreakPoint)\n    },\n    isSticky (): boolean {\n      return this.sticky || this.app\n    },\n    styles (): object {\n      const styles: Record<string, any> = { ...VSheet.options.computed.styles.call(this) }\n\n      if (this.isSticky) {\n        const top = !this.app\n          ? 0\n          : (this.$vuetify.application.bar + this.$vuetify.application.top)\n\n        styles.top = convertToUnit(top)\n        styles.position = 'sticky'\n        styles.zIndex = 1\n      }\n\n      return styles\n    },\n  },\n\n  methods: {\n    /** @public */\n    toggle () {\n      this.isActive = !this.isActive\n    },\n    iconClick (e: MouseEvent) {\n      this.$emit('click:icon', e)\n    },\n    genIcon () {\n      if (!this.hasIcon) return undefined\n\n      let content\n\n      if (this.icon) {\n        content = this.$createElement(VIcon, {\n          props: {\n            color: this.iconColor,\n            size: 28,\n          },\n        }, [this.icon])\n      } else {\n        content = this.$slots.icon\n      }\n\n      return this.$createElement(VAvatar, {\n        staticClass: 'v-banner__icon',\n        props: {\n          color: this.color,\n          size: 40,\n        },\n        on: {\n          click: this.iconClick,\n        },\n      }, [content])\n    },\n    genText () {\n      return this.$createElement('div', {\n        staticClass: 'v-banner__text',\n      }, this.$slots.default)\n    },\n    genActions () {\n      const children = getSlot(this, 'actions', {\n        dismiss: () => this.isActive = false,\n      })\n\n      if (!children) return undefined\n\n      return this.$createElement('div', {\n        staticClass: 'v-banner__actions',\n      }, children)\n    },\n    genContent () {\n      return this.$createElement('div', {\n        staticClass: 'v-banner__content',\n      }, [\n        this.genIcon(),\n        this.genText(),\n      ])\n    },\n    genWrapper () {\n      return this.$createElement('div', {\n        staticClass: 'v-banner__wrapper',\n      }, [\n        this.genContent(),\n        this.genActions(),\n      ])\n    },\n  },\n\n  render (h): VNode {\n    return h(VExpandTransition, [\n      h('div', {\n        staticClass: 'v-banner',\n        attrs: this.attrs$,\n        class: this.classes,\n        style: this.styles,\n        directives: [{\n          name: 'show',\n          value: this.isActive,\n        }],\n      }, [this.genWrapper()]),\n    ])\n  },\n})\n"],"sourceRoot":""}]}