{"remainingRequest":"C:\\Users\\Acer\\Desktop\\pmm\\pm25-vue\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Acer\\Desktop\\pmm\\pm25-vue\\node_modules\\vuetify-loader\\lib\\loader.js??ref--18-0!C:\\Users\\Acer\\Desktop\\pmm\\pm25-vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Acer\\Desktop\\pmm\\pm25-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Acer\\Desktop\\pmm\\pm25-vue\\src\\views\\Graph.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Acer\\Desktop\\pmm\\pm25-vue\\src\\views\\Graph.vue","mtime":1576663309168},{"path":"C:\\Users\\Acer\\Desktop\\pmm\\pm25-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Acer\\Desktop\\pmm\\pm25-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Acer\\Desktop\\pmm\\pm25-vue\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1574476662000},{"path":"C:\\Users\\Acer\\Desktop\\pmm\\pm25-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Acer\\Desktop\\pmm\\pm25-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\nimport VueHighcharts from 'vue2-highcharts';\nimport Highcharts from 'highcharts';\nexport default {\n  components: {\n    // Drilldown,\n    VueHighcharts\n  },\n\n  data() {\n    return {\n      Highcharts: Highcharts,\n      options: {\n        chart: {\n          height: 500,\n          type: 'spline',\n          animation: Highcharts.svg,\n          // don't animate in old IE\n          marginRight: 10,\n          events: {\n            load: function () {\n              // set up the updating of the chart each second\n              var series = this.series[0];\n              setInterval(function () {\n                var x = new Date().getTime(),\n                    // current time\n                y = Math.random() * 10 + 1;\n                series.addPoint([x, y], true, true);\n              }, 1000);\n            }\n          }\n        },\n        time: {\n          useUTC: false\n        },\n        title: {\n          text: 'Live Temperature'\n        },\n        xAxis: {\n          type: 'datetime',\n          tickPixelInterval: 150\n        },\n        yAxis: {\n          title: {\n            text: null\n          },\n          plotLines: [{\n            value: 0,\n            width: 1,\n            color: '#808080'\n          }]\n        },\n        tooltip: {\n          headerFormat: '<b>{series.name}</b><br/>',\n          pointFormat: '{point.x:%Y-%m-%d %H:%M:%S}<br/>{point.y:.2f}'\n        },\n        legend: {\n          enabled: false\n        },\n        exporting: {\n          enabled: false\n        },\n        series: [{\n          name: 'Random data',\n          color: '#FFEB34',\n          data: function () {\n            // generate an array of random data\n            var data = [],\n                time = new Date().getTime(),\n                i;\n\n            for (i = -19; i <= 0; i += 1) {\n              data.push({\n                x: time + i * 1000,\n                y: Math.random() * 10 + 1\n              });\n            }\n\n            return data;\n          }()\n        }]\n      }\n    };\n  }\n\n};",{"version":3,"sources":["Graph.vue"],"names":[],"mappings":";;;;;;;;;AAUA,OAAA,aAAA,MAAA,iBAAA;AACA,OAAA,UAAA,MAAA,YAAA;AACA,eAAA;AACA,EAAA,UAAA,EAAA;AACA;AACA,IAAA;AAFA,GADA;;AAKA,EAAA,IAAA,GAAA;AACA,WAAA;AACA,MAAA,UAAA,EAAA,UADA;AAEA,MAAA,OAAA,EAAA;AACA,QAAA,KAAA,EAAA;AACA,UAAA,MAAA,EAAA,GADA;AAEA,UAAA,IAAA,EAAA,QAFA;AAGA,UAAA,SAAA,EAAA,UAAA,CAAA,GAHA;AAGA;AACA,UAAA,WAAA,EAAA,EAJA;AAKA,UAAA,MAAA,EAAA;AACA,YAAA,IAAA,EAAA,YAAA;AACA;AACA,kBAAA,MAAA,GAAA,KAAA,MAAA,CAAA,CAAA,CAAA;AACA,cAAA,WAAA,CAAA,YAAA;AACA,oBAAA,CAAA,GAAA,IAAA,IAAA,EAAA,CAAA,OAAA,EAAA;AAAA,oBAAA;AACA,gBAAA,CAAA,GAAA,IAAA,CAAA,MAAA,KAAA,EAAA,GAAA,CADA;AAEA,gBAAA,MAAA,CAAA,QAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,EAAA,IAAA,EAAA,IAAA;AACA,eAJA,EAIA,IAJA,CAAA;AAKA;AATA;AALA,SADA;AAkBA,QAAA,IAAA,EAAA;AACA,UAAA,MAAA,EAAA;AADA,SAlBA;AAqBA,QAAA,KAAA,EAAA;AACA,UAAA,IAAA,EAAA;AADA,SArBA;AAwBA,QAAA,KAAA,EAAA;AACA,UAAA,IAAA,EAAA,UADA;AAEA,UAAA,iBAAA,EAAA;AAFA,SAxBA;AA4BA,QAAA,KAAA,EAAA;AACA,UAAA,KAAA,EAAA;AACA,YAAA,IAAA,EAAA;AADA,WADA;AAIA,UAAA,SAAA,EAAA,CAAA;AACA,YAAA,KAAA,EAAA,CADA;AAEA,YAAA,KAAA,EAAA,CAFA;AAGA,YAAA,KAAA,EAAA;AAHA,WAAA;AAJA,SA5BA;AAsCA,QAAA,OAAA,EAAA;AACA,UAAA,YAAA,EAAA,2BADA;AAEA,UAAA,WAAA,EAAA;AAFA,SAtCA;AA0CA,QAAA,MAAA,EAAA;AACA,UAAA,OAAA,EAAA;AADA,SA1CA;AA6CA,QAAA,SAAA,EAAA;AACA,UAAA,OAAA,EAAA;AADA,SA7CA;AAgDA,QAAA,MAAA,EAAA,CAAA;AACA,UAAA,IAAA,EAAA,aADA;AAEA,UAAA,KAAA,EAAA,SAFA;AAGA,UAAA,IAAA,EAAA,YAAA;AACA;AACA,gBAAA,IAAA,GAAA,EAAA;AAAA,gBACA,IAAA,GAAA,IAAA,IAAA,EAAA,CAAA,OAAA,EADA;AAAA,gBAEA,CAFA;;AAGA,iBAAA,CAAA,GAAA,CAAA,EAAA,EAAA,CAAA,IAAA,CAAA,EAAA,CAAA,IAAA,CAAA,EAAA;AACA,cAAA,IAAA,CAAA,IAAA,CAAA;AACA,gBAAA,CAAA,EAAA,IAAA,GAAA,CAAA,GAAA,IADA;AAEA,gBAAA,CAAA,EAAA,IAAA,CAAA,MAAA,KAAA,EAAA,GAAA;AAFA,eAAA;AAIA;;AACA,mBAAA,IAAA;AACA,WAZA;AAHA,SAAA;AAhDA;AAFA,KAAA;AAqEA;;AA3EA,CAAA","sourcesContent":["<template>\r\n    <div slot=\"media\">\r\n      <vue-highcharts\r\n        :highcharts=\"Highcharts\"\r\n        :options=\"options\"\r\n        ref=\"drilldownChart\"\r\n      ></vue-highcharts>\r\n    </div>\r\n</template>\r\n<script>\r\nimport VueHighcharts from 'vue2-highcharts'\r\nimport Highcharts from 'highcharts'\r\nexport default {\r\n  components: {\r\n    // Drilldown,\r\n    VueHighcharts\r\n  },\r\n  data () {\r\n    return {\r\n      Highcharts: Highcharts,\r\n      options: {\r\n        chart: {\r\n          height: 500,\r\n          type: 'spline',\r\n          animation: Highcharts.svg, // don't animate in old IE\r\n          marginRight: 10,\r\n          events: {\r\n            load: function () {\r\n              // set up the updating of the chart each second\r\n              var series = this.series[0]\r\n              setInterval(function () {\r\n                var x = (new Date()).getTime(), // current time\r\n                  y = (Math.random() * 10) + 1\r\n                series.addPoint([x, y], true, true)\r\n              }, 1000)\r\n            }\r\n          }\r\n        },\r\n        time: {\r\n          useUTC: false\r\n        },\r\n        title: {\r\n          text: 'Live Temperature'\r\n        },\r\n        xAxis: {\r\n          type: 'datetime',\r\n          tickPixelInterval: 150\r\n        },\r\n        yAxis: {\r\n          title: {\r\n            text: null\r\n          },\r\n          plotLines: [{\r\n            value: 0,\r\n            width: 1,\r\n            color: '#808080'\r\n          }]\r\n        },\r\n        tooltip: {\r\n          headerFormat: '<b>{series.name}</b><br/>',\r\n          pointFormat: '{point.x:%Y-%m-%d %H:%M:%S}<br/>{point.y:.2f}'\r\n        },\r\n        legend: {\r\n          enabled: false\r\n        },\r\n        exporting: {\r\n          enabled: false\r\n        },\r\n        series: [{\r\n          name: 'Random data',\r\n          color: '#FFEB34',\r\n          data: (function () {\r\n            // generate an array of random data\r\n            var data = [],\r\n              time = (new Date()).getTime(),\r\n              i;\r\n            for (i = -19; i <= 0; i += 1) {\r\n              data.push({\r\n                x: time + i * 1000,\r\n                y: (Math.random() * 10) + 1\r\n              });\r\n            }\r\n            return data;\r\n          }())\r\n        }]\r\n      }\r\n    }\r\n  },\r\n}\r\n</script>\r\n<style>\r\n\r\n</style>"],"sourceRoot":"src/views"}]}