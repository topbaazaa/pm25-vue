{"remainingRequest":"C:\\Users\\Acer\\Desktop\\pmm\\pm25-vue\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Acer\\Desktop\\pmm\\pm25-vue\\node_modules\\vuetify\\lib\\components\\VExpansionPanel\\VExpansionPanelContent.js","dependencies":[{"path":"C:\\Users\\Acer\\Desktop\\pmm\\pm25-vue\\node_modules\\vuetify\\lib\\components\\VExpansionPanel\\VExpansionPanelContent.js","mtime":499162500000},{"path":"C:\\Users\\Acer\\Desktop\\pmm\\pm25-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Acer\\Desktop\\pmm\\pm25-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import { VExpandTransition } from '../transitions'; // Mixins\n\nimport Bootable from '../../mixins/bootable';\nimport { inject as RegistrableInject } from '../../mixins/registrable'; // Utilities\n\nimport { getSlot } from '../../util/helpers';\nimport mixins from '../../util/mixins';\nconst baseMixins = mixins(Bootable, RegistrableInject('expansionPanel', 'v-expansion-panel-content', 'v-expansion-panel'));\n/* @vue/component */\n\nexport default baseMixins.extend().extend({\n  name: 'v-expansion-panel-content',\n  computed: {\n    isActive() {\n      return this.expansionPanel.isActive;\n    }\n\n  },\n\n  created() {\n    this.expansionPanel.registerContent(this);\n  },\n\n  beforeDestroy() {\n    this.expansionPanel.unregisterContent();\n  },\n\n  render(h) {\n    return h(VExpandTransition, [h('div', {\n      staticClass: 'v-expansion-panel-content',\n      directives: [{\n        name: 'show',\n        value: this.isActive\n      }]\n    }, this.showLazyContent([h('div', {\n      class: 'v-expansion-panel-content__wrap'\n    }, getSlot(this))]))]);\n  }\n\n});",{"version":3,"sources":["../../../src/components/VExpansionPanel/VExpansionPanelContent.ts"],"names":[],"mappings":"AAEA,SAAA,iBAAA,QAAA,gBAAA,C,CAEA;;AACA,OAAA,QAAA,MAAA,uBAAA;AACA,SAAS,MAAM,IAAf,iBAAA,QAAA,0BAAA,C,CAEA;;AACA,SAAA,OAAA,QAAA,oBAAA;AACA,OAAA,MAAA,MAAA,mBAAA;AAKA,MAAM,UAAU,GAAG,MAAM,CAAA,QAAA,EAEvB,iBAAiB,CAAA,gBAAA,EAAA,2BAAA,EAFnB,mBAEmB,CAFM,CAAzB;AASA;;AACA,eAAe,UAAU,CAAV,MAAA,GAAA,MAAA,CAAoC;AACjD,EAAA,IAAI,EAD6C,2BAAA;AAGjD,EAAA,QAAQ,EAAE;AACR,IAAA,QAAQ,GAAA;AACN,aAAO,KAAA,cAAA,CAAP,QAAA;AACD;;AAHO,GAHuC;;AASjD,EAAA,OAAO,GAAA;AACL,SAAA,cAAA,CAAA,eAAA,CAAA,IAAA;AAV+C,GAAA;;AAajD,EAAA,aAAa,GAAA;AACX,SAAA,cAAA,CAAA,iBAAA;AAd+C,GAAA;;AAiBjD,EAAA,MAAM,CAAA,CAAA,EAAG;AACP,WAAO,CAAC,CAAA,iBAAA,EAAoB,CAC1B,CAAC,CAAA,KAAA,EAAQ;AACP,MAAA,WAAW,EADJ,2BAAA;AAEP,MAAA,UAAU,EAAE,CAAC;AACX,QAAA,IAAI,EADO,MAAA;AAEX,QAAA,KAAK,EAAE,KAAK;AAFD,OAAD;AAFL,KAAR,EAME,KAAA,eAAA,CAAqB,CACtB,CAAC,CAAA,KAAA,EAAQ;AAAE,MAAA,KAAK,EAAE;AAAT,KAAR,EAAsD,OAAO,CARlE,IAQkE,CAA7D,CADqB,CAArB,CANF,CADyB,CAApB,CAAR;AAWD;;AA7BgD,CAApC,CAAf","sourcesContent":["// Components\nimport VExpansionPanel from './VExpansionPanel'\nimport { VExpandTransition } from '../transitions'\n\n// Mixins\nimport Bootable from '../../mixins/bootable'\nimport { inject as RegistrableInject } from '../../mixins/registrable'\n\n// Utilities\nimport { getSlot } from '../../util/helpers'\nimport mixins, { ExtractVue } from '../../util/mixins'\n\n// Types\nimport Vue, { VNode, VueConstructor } from 'vue'\n\nconst baseMixins = mixins(\n  Bootable,\n  RegistrableInject<'expansionPanel', VueConstructor<Vue>>('expansionPanel', 'v-expansion-panel-content', 'v-expansion-panel')\n)\n\ninterface options extends ExtractVue<typeof baseMixins> {\n  expansionPanel: InstanceType<typeof VExpansionPanel>\n}\n\n/* @vue/component */\nexport default baseMixins.extend<options>().extend({\n  name: 'v-expansion-panel-content',\n\n  computed: {\n    isActive (): boolean {\n      return this.expansionPanel.isActive\n    },\n  },\n\n  created () {\n    this.expansionPanel.registerContent(this)\n  },\n\n  beforeDestroy () {\n    this.expansionPanel.unregisterContent()\n  },\n\n  render (h): VNode {\n    return h(VExpandTransition, [\n      h('div', {\n        staticClass: 'v-expansion-panel-content',\n        directives: [{\n          name: 'show',\n          value: this.isActive,\n        }],\n      }, this.showLazyContent([\n        h('div', { class: 'v-expansion-panel-content__wrap' }, getSlot(this)),\n      ])),\n    ])\n  },\n})\n"],"sourceRoot":""}]}