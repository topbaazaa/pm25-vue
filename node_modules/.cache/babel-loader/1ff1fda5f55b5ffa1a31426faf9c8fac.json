{"remainingRequest":"C:\\Users\\Acer\\Desktop\\pmm\\pm25-vue\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Acer\\Desktop\\pmm\\pm25-vue\\node_modules\\vuetify\\lib\\components\\VDataTable\\VVirtualTable.js","dependencies":[{"path":"C:\\Users\\Acer\\Desktop\\pmm\\pm25-vue\\node_modules\\vuetify\\lib\\components\\VDataTable\\VVirtualTable.js","mtime":499162500000},{"path":"C:\\Users\\Acer\\Desktop\\pmm\\pm25-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Acer\\Desktop\\pmm\\pm25-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"../../../src/components/VDataTable/VVirtualTable.sass\"; // Components\n\nimport VSimpleTable from './VSimpleTable';\nimport mixins from '../../util/mixins'; // Utiltiies\n\nimport { convertToUnit, debounce } from '../../util/helpers'; // Types\n\nconst baseMixins = mixins(VSimpleTable);\nexport default baseMixins.extend().extend({\n  name: 'v-virtual-table',\n  props: {\n    chunkSize: {\n      type: Number,\n      default: 25\n    },\n    headerHeight: {\n      type: Number,\n      default: 48\n    },\n    items: {\n      type: Array,\n      default: () => []\n    },\n    rowHeight: {\n      type: Number,\n      default: 48\n    }\n  },\n  data: () => ({\n    scrollTop: 0,\n    oldChunk: 0,\n    scrollDebounce: null,\n    invalidateCache: false\n  }),\n  computed: {\n    itemsLength() {\n      return this.items.length;\n    },\n\n    totalHeight() {\n      return this.itemsLength * this.rowHeight + this.headerHeight;\n    },\n\n    topIndex() {\n      return Math.floor(this.scrollTop / this.rowHeight);\n    },\n\n    chunkIndex() {\n      return Math.floor(this.topIndex / this.chunkSize);\n    },\n\n    startIndex() {\n      return Math.max(0, this.chunkIndex * this.chunkSize - this.chunkSize);\n    },\n\n    offsetTop() {\n      return Math.max(0, this.startIndex * this.rowHeight);\n    },\n\n    stopIndex() {\n      return Math.min(this.startIndex + this.chunkSize * 3, this.itemsLength);\n    },\n\n    offsetBottom() {\n      return Math.max(0, (this.itemsLength - this.stopIndex - this.startIndex) * this.rowHeight);\n    }\n\n  },\n  watch: {\n    chunkIndex(newValue, oldValue) {\n      this.oldChunk = oldValue;\n    },\n\n    items() {\n      this.cachedItems = null;\n      this.$refs.table.scrollTop = 0;\n    }\n\n  },\n\n  created() {\n    this.cachedItems = null;\n  },\n\n  mounted() {\n    this.scrollDebounce = debounce(this.onScroll, 50);\n    this.$refs.table.addEventListener('scroll', this.scrollDebounce, {\n      passive: true\n    });\n  },\n\n  beforeDestroy() {\n    this.$refs.table.removeEventListener('scroll', this.scrollDebounce);\n  },\n\n  methods: {\n    createStyleHeight(height) {\n      return {\n        height: `${height}px`\n      };\n    },\n\n    genBody() {\n      if (this.cachedItems === null || this.chunkIndex !== this.oldChunk) {\n        this.cachedItems = this.genItems();\n        this.oldChunk = this.chunkIndex;\n      }\n\n      return this.$createElement('tbody', [this.$createElement('tr', {\n        style: this.createStyleHeight(this.offsetTop)\n      }), this.cachedItems, this.$createElement('tr', {\n        style: this.createStyleHeight(this.offsetBottom)\n      })]);\n    },\n\n    genItems() {\n      return this.$scopedSlots.items({\n        items: this.items.slice(this.startIndex, this.stopIndex)\n      });\n    },\n\n    onScroll(e) {\n      const target = e.target;\n      this.scrollTop = target.scrollTop;\n    },\n\n    genTable() {\n      return this.$createElement('div', {\n        ref: 'table',\n        staticClass: 'v-virtual-table__table'\n      }, [this.$createElement('table', [this.$slots['body.before'], this.genBody(), this.$slots['body.after']])]);\n    },\n\n    genWrapper() {\n      return this.$createElement('div', {\n        staticClass: 'v-virtual-table__wrapper',\n        style: {\n          height: convertToUnit(this.height)\n        }\n      }, [this.genTable()]);\n    }\n\n  },\n\n  render(h) {\n    return h('div', {\n      staticClass: 'v-data-table v-virtual-table',\n      class: this.classes\n    }, [this.$slots.top, this.genWrapper(), this.$slots.bottom]);\n  }\n\n});",{"version":3,"sources":["../../../src/components/VDataTable/VVirtualTable.ts"],"names":[],"mappings":"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","sourcesContent":["import './VVirtualTable.sass'\n\n// Components\nimport VSimpleTable from './VSimpleTable'\n\n// Types\nimport { VNode, VNodeChildren } from 'vue'\nimport { PropValidator } from 'vue/types/options'\nimport mixins from '../../util/mixins'\n\n// Utiltiies\nimport { convertToUnit, debounce } from '../../util/helpers'\n\n// Types\nconst baseMixins = mixins(VSimpleTable)\n\ninterface options extends InstanceType<typeof baseMixins> {\n  $refs: {\n    table: HTMLElement\n  }\n  cachedItems: VNodeChildren\n}\n\nexport default baseMixins.extend<options>().extend({\n  name: 'v-virtual-table',\n\n  props: {\n    chunkSize: {\n      type: Number,\n      default: 25,\n    },\n    headerHeight: {\n      type: Number,\n      default: 48,\n    },\n    items: {\n      type: Array,\n      default: () => ([]),\n    } as PropValidator<any[]>,\n    rowHeight: {\n      type: Number,\n      default: 48,\n    },\n  },\n\n  data: () => ({\n    scrollTop: 0,\n    oldChunk: 0,\n    scrollDebounce: null as any,\n    invalidateCache: false,\n  }),\n\n  computed: {\n    itemsLength (): number {\n      return this.items.length\n    },\n    totalHeight (): number {\n      return (this.itemsLength * this.rowHeight) + this.headerHeight\n    },\n    topIndex (): number {\n      return Math.floor(this.scrollTop / this.rowHeight)\n    },\n    chunkIndex (): number {\n      return Math.floor(this.topIndex / this.chunkSize)\n    },\n    startIndex (): number {\n      return Math.max(0, (this.chunkIndex * this.chunkSize) - this.chunkSize)\n    },\n    offsetTop (): number {\n      return Math.max(0, this.startIndex * this.rowHeight)\n    },\n    stopIndex (): number {\n      return Math.min(this.startIndex + (this.chunkSize * 3), this.itemsLength)\n    },\n    offsetBottom (): number {\n      return Math.max(0, (this.itemsLength - this.stopIndex - this.startIndex) * this.rowHeight)\n    },\n  },\n\n  watch: {\n    chunkIndex (newValue, oldValue) {\n      this.oldChunk = oldValue\n    },\n    items () {\n      this.cachedItems = null\n      this.$refs.table.scrollTop = 0\n    },\n  },\n\n  created () {\n    this.cachedItems = null\n  },\n\n  mounted () {\n    this.scrollDebounce = debounce(this.onScroll, 50)\n\n    this.$refs.table.addEventListener('scroll', this.scrollDebounce, { passive: true })\n  },\n\n  beforeDestroy () {\n    this.$refs.table.removeEventListener('scroll', this.scrollDebounce)\n  },\n\n  methods: {\n    createStyleHeight (height: number) {\n      return {\n        height: `${height}px`,\n      }\n    },\n    genBody () {\n      if (this.cachedItems === null || this.chunkIndex !== this.oldChunk) {\n        this.cachedItems = this.genItems()\n        this.oldChunk = this.chunkIndex\n      }\n\n      return this.$createElement('tbody', [\n        this.$createElement('tr', { style: this.createStyleHeight(this.offsetTop) }),\n        this.cachedItems,\n        this.$createElement('tr', { style: this.createStyleHeight(this.offsetBottom) }),\n      ])\n    },\n    genItems () {\n      return this.$scopedSlots.items!({ items: this.items.slice(this.startIndex, this.stopIndex) })\n    },\n    onScroll (e: Event) {\n      const target = e.target as Element\n      this.scrollTop = target.scrollTop\n    },\n    genTable () {\n      return this.$createElement('div', {\n        ref: 'table',\n        staticClass: 'v-virtual-table__table',\n      }, [\n        this.$createElement('table', [\n          this.$slots['body.before'],\n          this.genBody(),\n          this.$slots['body.after'],\n        ]),\n      ])\n    },\n    genWrapper () {\n      return this.$createElement('div', {\n        staticClass: 'v-virtual-table__wrapper',\n        style: {\n          height: convertToUnit(this.height),\n        },\n      }, [\n        this.genTable(),\n      ])\n    },\n  },\n\n  render (h): VNode {\n    return h('div', {\n      staticClass: 'v-data-table v-virtual-table',\n      class: this.classes,\n    }, [\n      this.$slots.top,\n      this.genWrapper(),\n      this.$slots.bottom,\n    ])\n  },\n})\n"],"sourceRoot":""}]}