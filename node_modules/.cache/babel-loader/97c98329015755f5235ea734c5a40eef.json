{"remainingRequest":"C:\\Users\\Acer\\Desktop\\pmm\\pm25-vue\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Acer\\Desktop\\pmm\\pm25-vue\\node_modules\\vuetify\\lib\\mixins\\toggleable\\index.js","dependencies":[{"path":"C:\\Users\\Acer\\Desktop\\pmm\\pm25-vue\\node_modules\\vuetify\\lib\\mixins\\toggleable\\index.js","mtime":499162500000},{"path":"C:\\Users\\Acer\\Desktop\\pmm\\pm25-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Acer\\Desktop\\pmm\\pm25-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import Vue from 'vue';\nexport function factory(prop = 'value', event = 'input') {\n  return Vue.extend({\n    name: 'toggleable',\n    model: {\n      prop,\n      event\n    },\n    props: {\n      [prop]: {\n        required: false\n      }\n    },\n\n    data() {\n      return {\n        isActive: !!this[prop]\n      };\n    },\n\n    watch: {\n      [prop](val) {\n        this.isActive = !!val;\n      },\n\n      isActive(val) {\n        !!val !== this[prop] && this.$emit(event, val);\n      }\n\n    }\n  });\n}\n/* eslint-disable-next-line no-redeclare */\n\nconst Toggleable = factory();\nexport default Toggleable;",{"version":3,"sources":["../../../src/mixins/toggleable/index.ts"],"names":[],"mappings":"AAAA,OAAA,GAAA,MAAA,KAAA;AAMA,OAAM,SAAA,OAAA,CAAmB,IAAI,GAAvB,OAAA,EAAmC,KAAK,GAAxC,OAAA,EAAkD;AACtD,SAAO,GAAG,CAAH,MAAA,CAAW;AAChB,IAAA,IAAI,EADY,YAAA;AAGhB,IAAA,KAAK,EAAE;AAAA,MAAA,IAAA;AAAQ,MAAA;AAAR,KAHS;AAKhB,IAAA,KAAK,EAAE;AACL,OAAA,IAAA,GAAQ;AAAE,QAAA,QAAQ,EAAE;AAAZ;AADH,KALS;;AAShB,IAAA,IAAI,GAAA;AACF,aAAO;AACL,QAAA,QAAQ,EAAE,CAAC,CAAC,KAAA,IAAA;AADP,OAAP;AAVc,KAAA;;AAehB,IAAA,KAAK,EAAE;AACL,OAAA,IAAA,EAAA,GAAA,EAAW;AACT,aAAA,QAAA,GAAgB,CAAC,CAAjB,GAAA;AAFG,OAAA;;AAIL,MAAA,QAAQ,CAAA,GAAA,EAAK;AACX,SAAC,CAAD,GAAA,KAAU,KAAV,IAAU,CAAV,IAAwB,KAAA,KAAA,CAAA,KAAA,EAAxB,GAAwB,CAAxB;AACD;;AANI;AAfS,GAAX,CAAP;AAwBD;AAED;;AACA,MAAM,UAAU,GAAG,OAAnB,EAAA;AAEA,eAAA,UAAA","sourcesContent":["import Vue, { VueConstructor } from 'vue'\n\n/* eslint-disable-next-line no-use-before-define */\nexport type Toggleable<T extends string = 'value'> = VueConstructor<Vue & { isActive: boolean } & Record<T, any>>\n\nexport function factory<T extends string = 'value'> (prop?: T, event?: string): Toggleable<T>\nexport function factory (prop = 'value', event = 'input') {\n  return Vue.extend({\n    name: 'toggleable',\n\n    model: { prop, event },\n\n    props: {\n      [prop]: { required: false },\n    },\n\n    data () {\n      return {\n        isActive: !!this[prop],\n      }\n    },\n\n    watch: {\n      [prop] (val) {\n        this.isActive = !!val\n      },\n      isActive (val) {\n        !!val !== this[prop] && this.$emit(event, val)\n      },\n    },\n  })\n}\n\n/* eslint-disable-next-line no-redeclare */\nconst Toggleable = factory()\n\nexport default Toggleable\n"],"sourceRoot":""}]}