{"remainingRequest":"C:\\Users\\Acer\\Desktop\\pmm\\pm25-vue\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Acer\\Desktop\\pmm\\pm25-vue\\node_modules\\vuetify\\lib\\components\\VAvatar\\VAvatar.js","dependencies":[{"path":"C:\\Users\\Acer\\Desktop\\pmm\\pm25-vue\\node_modules\\vuetify\\lib\\components\\VAvatar\\VAvatar.js","mtime":499162500000},{"path":"C:\\Users\\Acer\\Desktop\\pmm\\pm25-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Acer\\Desktop\\pmm\\pm25-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"../../../src/components/VAvatar/VAvatar.sass\"; // Mixins\n\nimport Colorable from '../../mixins/colorable';\nimport Measurable from '../../mixins/measurable';\nimport { convertToUnit } from '../../util/helpers';\nimport mixins from '../../util/mixins';\nexport default mixins(Colorable, Measurable\n/* @vue/component */\n).extend({\n  name: 'v-avatar',\n  props: {\n    left: Boolean,\n    right: Boolean,\n    size: {\n      type: [Number, String],\n      default: 48\n    },\n    tile: Boolean\n  },\n  computed: {\n    classes() {\n      return {\n        'v-avatar--left': this.left,\n        'v-avatar--right': this.right,\n        'v-avatar--tile': this.tile\n      };\n    },\n\n    styles() {\n      return {\n        height: convertToUnit(this.size),\n        minWidth: convertToUnit(this.size),\n        width: convertToUnit(this.size),\n        ...this.measurableStyles\n      };\n    }\n\n  },\n\n  render(h) {\n    const data = {\n      staticClass: 'v-avatar',\n      class: this.classes,\n      style: this.styles,\n      on: this.$listeners\n    };\n    return h('div', this.setBackgroundColor(this.color, data), this.$slots.default);\n  }\n\n});",{"version":3,"sources":["../../../src/components/VAvatar/VAvatar.ts"],"names":[],"mappings":"AAAA,OAAA,8CAAA,C,CAEA;;AACA,OAAA,SAAA,MAAA,wBAAA;AACA,OAAA,UAAA,MAAA,yBAAA;AACA,SAAA,aAAA,QAAA,oBAAA;AAIA,OAAA,MAAA,MAAA,mBAAA;AAEA,eAAe,MAAM,CAAA,SAAA,EAEnB;AACA;AAHmB,CAAN,CAAA,MAAA,CAIN;AACP,EAAA,IAAI,EADG,UAAA;AAGP,EAAA,KAAK,EAAE;AACL,IAAA,IAAI,EADC,OAAA;AAEL,IAAA,KAAK,EAFA,OAAA;AAGL,IAAA,IAAI,EAAE;AACJ,MAAA,IAAI,EAAE,CAAA,MAAA,EADF,MACE,CADF;AAEJ,MAAA,OAAO,EAAE;AAFL,KAHD;AAOL,IAAA,IAAI,EAAE;AAPD,GAHA;AAaP,EAAA,QAAQ,EAAE;AACR,IAAA,OAAO,GAAA;AACL,aAAO;AACL,0BAAkB,KADb,IAAA;AAEL,2BAAmB,KAFd,KAAA;AAGL,0BAAkB,KAAK;AAHlB,OAAP;AAFM,KAAA;;AAQR,IAAA,MAAM,GAAA;AACJ,aAAO;AACL,QAAA,MAAM,EAAE,aAAa,CAAC,KADjB,IACgB,CADhB;AAEL,QAAA,QAAQ,EAAE,aAAa,CAAC,KAFnB,IAEkB,CAFlB;AAGL,QAAA,KAAK,EAAE,aAAa,CAAC,KAHhB,IAGe,CAHf;AAIL,WAAG,KAAK;AAJH,OAAP;AAMD;;AAfO,GAbH;;AA+BP,EAAA,MAAM,CAAA,CAAA,EAAG;AACP,UAAM,IAAI,GAAG;AACX,MAAA,WAAW,EADA,UAAA;AAEX,MAAA,KAAK,EAAE,KAFI,OAAA;AAGX,MAAA,KAAK,EAAE,KAHI,MAAA;AAIX,MAAA,EAAE,EAAE,KAAK;AAJE,KAAb;AAOA,WAAO,CAAC,CAAA,KAAA,EAAQ,KAAA,kBAAA,CAAwB,KAAxB,KAAA,EAAR,IAAQ,CAAR,EAAmD,KAAA,MAAA,CAA3D,OAAQ,CAAR;AACD;;AAxCM,CAJM,CAAf","sourcesContent":["import './VAvatar.sass'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport Measurable from '../../mixins/measurable'\nimport { convertToUnit } from '../../util/helpers'\n\n// Types\nimport { VNode } from 'vue'\nimport mixins from '../../util/mixins'\n\nexport default mixins(\n  Colorable,\n  Measurable\n  /* @vue/component */\n).extend({\n  name: 'v-avatar',\n\n  props: {\n    left: Boolean,\n    right: Boolean,\n    size: {\n      type: [Number, String],\n      default: 48,\n    },\n    tile: Boolean,\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        'v-avatar--left': this.left,\n        'v-avatar--right': this.right,\n        'v-avatar--tile': this.tile,\n      }\n    },\n    styles (): object {\n      return {\n        height: convertToUnit(this.size),\n        minWidth: convertToUnit(this.size),\n        width: convertToUnit(this.size),\n        ...this.measurableStyles,\n      }\n    },\n  },\n\n  render (h): VNode {\n    const data = {\n      staticClass: 'v-avatar',\n      class: this.classes,\n      style: this.styles,\n      on: this.$listeners,\n    }\n\n    return h('div', this.setBackgroundColor(this.color, data), this.$slots.default)\n  },\n})\n"],"sourceRoot":""}]}