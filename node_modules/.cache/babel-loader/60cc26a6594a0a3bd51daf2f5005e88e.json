{"remainingRequest":"C:\\Users\\Acer\\Desktop\\pmm\\pm25-vue\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Acer\\Desktop\\pmm\\pm25-vue\\node_modules\\vuetify\\lib\\components\\VColorPicker\\VColorPickerPreview.js","dependencies":[{"path":"C:\\Users\\Acer\\Desktop\\pmm\\pm25-vue\\node_modules\\vuetify\\lib\\components\\VColorPicker\\VColorPickerPreview.js","mtime":499162500000},{"path":"C:\\Users\\Acer\\Desktop\\pmm\\pm25-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Acer\\Desktop\\pmm\\pm25-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["// Styles\nimport \"../../../src/components/VColorPicker/VColorPickerPreview.sass\"; // Components\n\nimport VSlider from '../VSlider/VSlider'; // Utilities\n\nimport { RGBtoCSS, RGBAtoCSS } from '../../util/colorUtils'; // Types\n\nimport Vue from 'vue';\nimport { fromHSVA } from './util';\nexport default Vue.extend({\n  name: 'v-color-picker-preview',\n  props: {\n    color: Object,\n    disabled: Boolean,\n    hideAlpha: Boolean\n  },\n  methods: {\n    genAlpha() {\n      return this.genTrack({\n        staticClass: 'v-color-picker__alpha',\n        props: {\n          thumbColor: 'grey lighten-2',\n          hideDetails: true,\n          value: this.color.alpha,\n          step: 0,\n          min: 0,\n          max: 1\n        },\n        style: {\n          backgroundImage: !this.disabled ? `linear-gradient(to right, transparent, ${RGBtoCSS(this.color.rgba)})` : undefined\n        },\n        on: {\n          input: val => this.color.alpha !== val && this.$emit('update:color', fromHSVA({ ...this.color.hsva,\n            a: val\n          }))\n        }\n      });\n    },\n\n    genSliders() {\n      return this.$createElement('div', {\n        staticClass: 'v-color-picker__sliders'\n      }, [this.genHue(), !this.hideAlpha && this.genAlpha()]);\n    },\n\n    genDot() {\n      return this.$createElement('div', {\n        staticClass: 'v-color-picker__dot'\n      }, [this.$createElement('div', {\n        style: {\n          background: RGBAtoCSS(this.color.rgba)\n        }\n      })]);\n    },\n\n    genHue() {\n      return this.genTrack({\n        staticClass: 'v-color-picker__hue',\n        props: {\n          thumbColor: 'grey lighten-2',\n          hideDetails: true,\n          value: this.color.hue,\n          step: 0,\n          min: 0,\n          max: 360\n        },\n        on: {\n          input: val => this.color.hue !== val && this.$emit('update:color', fromHSVA({ ...this.color.hsva,\n            h: val\n          }))\n        }\n      });\n    },\n\n    genTrack(options) {\n      return this.$createElement(VSlider, {\n        class: 'v-color-picker__track',\n        ...options,\n        props: {\n          disabled: this.disabled,\n          ...options.props\n        }\n      });\n    }\n\n  },\n\n  render(h) {\n    return h('div', {\n      staticClass: 'v-color-picker__preview',\n      class: {\n        'v-color-picker__preview--hide-alpha': this.hideAlpha\n      }\n    }, [this.genDot(), this.genSliders()]);\n  }\n\n});",{"version":3,"sources":["../../../src/components/VColorPicker/VColorPickerPreview.ts"],"names":[],"mappings":"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","sourcesContent":["// Styles\nimport './VColorPickerPreview.sass'\n\n// Components\nimport VSlider from '../VSlider/VSlider'\n\n// Utilities\nimport { RGBtoCSS, RGBAtoCSS } from '../../util/colorUtils'\n\n// Types\nimport Vue, { VNode, VNodeData } from 'vue'\nimport { PropValidator } from 'vue/types/options'\nimport { VColorPickerColor, fromHSVA } from './util'\n\nexport default Vue.extend({\n  name: 'v-color-picker-preview',\n\n  props: {\n    color: Object as PropValidator<VColorPickerColor>,\n    disabled: Boolean,\n    hideAlpha: Boolean,\n  },\n\n  methods: {\n    genAlpha (): VNode {\n      return this.genTrack({\n        staticClass: 'v-color-picker__alpha',\n        props: {\n          thumbColor: 'grey lighten-2',\n          hideDetails: true,\n          value: this.color.alpha,\n          step: 0,\n          min: 0,\n          max: 1,\n        },\n        style: {\n          backgroundImage: !this.disabled\n            ? `linear-gradient(to right, transparent, ${RGBtoCSS(this.color.rgba)})`\n            : undefined,\n        },\n        on: {\n          input: (val: number) => this.color.alpha !== val && this.$emit('update:color', fromHSVA({ ...this.color.hsva, a: val })),\n        },\n      })\n    },\n    genSliders (): VNode {\n      return this.$createElement('div', {\n        staticClass: 'v-color-picker__sliders',\n      }, [\n        this.genHue(),\n        !this.hideAlpha && this.genAlpha(),\n      ])\n    },\n    genDot (): VNode {\n      return this.$createElement('div', {\n        staticClass: 'v-color-picker__dot',\n      }, [\n        this.$createElement('div', {\n          style: {\n            background: RGBAtoCSS(this.color.rgba),\n          },\n        }),\n      ])\n    },\n    genHue (): VNode {\n      return this.genTrack({\n        staticClass: 'v-color-picker__hue',\n        props: {\n          thumbColor: 'grey lighten-2',\n          hideDetails: true,\n          value: this.color.hue,\n          step: 0,\n          min: 0,\n          max: 360,\n        },\n        on: {\n          input: (val: number) => this.color.hue !== val && this.$emit('update:color', fromHSVA({ ...this.color.hsva, h: val })),\n        },\n      })\n    },\n    genTrack (options: VNodeData): VNode {\n      return this.$createElement(VSlider, {\n        class: 'v-color-picker__track',\n        ...options,\n        props: {\n          disabled: this.disabled,\n          ...options.props,\n        },\n      })\n    },\n  },\n\n  render (h): VNode {\n    return h('div', {\n      staticClass: 'v-color-picker__preview',\n      class: {\n        'v-color-picker__preview--hide-alpha': this.hideAlpha,\n      },\n    }, [\n      this.genDot(),\n      this.genSliders(),\n    ])\n  },\n})\n"],"sourceRoot":""}]}