{"remainingRequest":"C:\\Users\\Acer\\Desktop\\pmm\\pm25-vue\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Acer\\Desktop\\pmm\\pm25-vue\\node_modules\\vuetify\\lib\\components\\VWindow\\VWindowItem.js","dependencies":[{"path":"C:\\Users\\Acer\\Desktop\\pmm\\pm25-vue\\node_modules\\vuetify\\lib\\components\\VWindow\\VWindowItem.js","mtime":499162500000},{"path":"C:\\Users\\Acer\\Desktop\\pmm\\pm25-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Acer\\Desktop\\pmm\\pm25-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["// Mixins\nimport Bootable from '../../mixins/bootable';\nimport { factory as GroupableFactory } from '../../mixins/groupable'; // Directives\n\nimport Touch from '../../directives/touch'; // Utilities\n\nimport { convertToUnit } from '../../util/helpers';\nimport mixins from '../../util/mixins';\nconst baseMixins = mixins(Bootable, GroupableFactory('windowGroup', 'v-window-item', 'v-window'));\nexport default baseMixins.extend().extend().extend({\n  name: 'v-window-item',\n  directives: {\n    Touch\n  },\n  props: {\n    disabled: Boolean,\n    reverseTransition: {\n      type: [Boolean, String],\n      default: undefined\n    },\n    transition: {\n      type: [Boolean, String],\n      default: undefined\n    },\n    value: {\n      required: false\n    }\n  },\n\n  data() {\n    return {\n      isActive: false,\n      inTransition: false\n    };\n  },\n\n  computed: {\n    classes() {\n      return this.groupClasses;\n    },\n\n    computedTransition() {\n      if (!this.windowGroup.internalReverse) {\n        return typeof this.transition !== 'undefined' ? this.transition || '' : this.windowGroup.computedTransition;\n      }\n\n      return typeof this.reverseTransition !== 'undefined' ? this.reverseTransition || '' : this.windowGroup.computedTransition;\n    }\n\n  },\n  methods: {\n    genDefaultSlot() {\n      return this.$slots.default;\n    },\n\n    genWindowItem() {\n      return this.$createElement('div', {\n        staticClass: 'v-window-item',\n        class: this.classes,\n        directives: [{\n          name: 'show',\n          value: this.isActive\n        }],\n        on: this.$listeners\n      }, this.showLazyContent(this.genDefaultSlot()));\n    },\n\n    onAfterTransition() {\n      if (!this.inTransition) {\n        return;\n      } // Finalize transition state.\n\n\n      this.inTransition = false;\n\n      if (this.windowGroup.transitionCount > 0) {\n        this.windowGroup.transitionCount--; // Remove container height if we are out of transition.\n\n        if (this.windowGroup.transitionCount === 0) {\n          this.windowGroup.transitionHeight = undefined;\n        }\n      }\n    },\n\n    onBeforeTransition() {\n      if (this.inTransition) {\n        return;\n      } // Initialize transition state here.\n\n\n      this.inTransition = true;\n\n      if (this.windowGroup.transitionCount === 0) {\n        // Set initial height for height transition.\n        this.windowGroup.transitionHeight = convertToUnit(this.windowGroup.$el.clientHeight);\n      }\n\n      this.windowGroup.transitionCount++;\n    },\n\n    onTransitionCancelled() {\n      this.onAfterTransition(); // This should have the same path as normal transition end.\n    },\n\n    onEnter(el) {\n      if (!this.inTransition) {\n        return;\n      }\n\n      this.$nextTick(() => {\n        // Do not set height if no transition or cancelled.\n        if (!this.computedTransition || !this.inTransition) {\n          return;\n        } // Set transition target height.\n\n\n        this.windowGroup.transitionHeight = convertToUnit(el.clientHeight);\n      });\n    }\n\n  },\n\n  render(h) {\n    return h('transition', {\n      props: {\n        name: this.computedTransition\n      },\n      on: {\n        // Handlers for enter windows.\n        beforeEnter: this.onBeforeTransition,\n        afterEnter: this.onAfterTransition,\n        enterCancelled: this.onTransitionCancelled,\n        // Handlers for leave windows.\n        beforeLeave: this.onBeforeTransition,\n        afterLeave: this.onAfterTransition,\n        leaveCancelled: this.onTransitionCancelled,\n        // Enter handler for height transition.\n        enter: this.onEnter\n      }\n    }, [this.genWindowItem()]);\n  }\n\n});",{"version":3,"sources":["../../../src/components/VWindow/VWindowItem.ts"],"names":[],"mappings":"AAGA;AACA,OAAA,QAAA,MAAA,uBAAA;AACA,SAAS,OAAO,IAAhB,gBAAA,QAAA,wBAAA,C,CAEA;;AACA,OAAA,KAAA,MAAA,wBAAA,C,CAEA;;AACA,SAAA,aAAA,QAAA,oBAAA;AACA,OAAA,MAAA,MAAA,mBAAA;AAKA,MAAM,UAAU,GAAG,MAAM,CAAA,QAAA,EAEvB,gBAAgB,CAAA,aAAA,EAAA,eAAA,EAFlB,UAEkB,CAFO,CAAzB;AAUA,eAAe,UAAU,CAAV,MAAA,GAAA,MAAA,GAAA,MAAA,CAEN;AACP,EAAA,IAAI,EADG,eAAA;AAGP,EAAA,UAAU,EAAE;AACV,IAAA;AADU,GAHL;AAOP,EAAA,KAAK,EAAE;AACL,IAAA,QAAQ,EADH,OAAA;AAEL,IAAA,iBAAiB,EAAE;AACjB,MAAA,IAAI,EAAE,CAAA,OAAA,EADW,MACX,CADW;AAEjB,MAAA,OAAO,EAAE;AAFQ,KAFd;AAML,IAAA,UAAU,EAAE;AACV,MAAA,IAAI,EAAE,CAAA,OAAA,EADI,MACJ,CADI;AAEV,MAAA,OAAO,EAAE;AAFC,KANP;AAUL,IAAA,KAAK,EAAE;AACL,MAAA,QAAQ,EAAE;AADL;AAVF,GAPA;;AAsBP,EAAA,IAAI,GAAA;AACF,WAAO;AACL,MAAA,QAAQ,EADH,KAAA;AAEL,MAAA,YAAY,EAAE;AAFT,KAAP;AAvBK,GAAA;;AA6BP,EAAA,QAAQ,EAAE;AACR,IAAA,OAAO,GAAA;AACL,aAAO,KAAP,YAAA;AAFM,KAAA;;AAIR,IAAA,kBAAkB,GAAA;AAChB,UAAI,CAAC,KAAA,WAAA,CAAL,eAAA,EAAuC;AACrC,eAAO,OAAO,KAAP,UAAA,KAAA,WAAA,GACH,KAAA,UAAA,IADG,EAAA,GAEH,KAAA,WAAA,CAFJ,kBAAA;AAGD;;AAED,aAAO,OAAO,KAAP,iBAAA,KAAA,WAAA,GACH,KAAA,iBAAA,IADG,EAAA,GAEH,KAAA,WAAA,CAFJ,kBAAA;AAGD;;AAdO,GA7BH;AA8CP,EAAA,OAAO,EAAE;AACP,IAAA,cAAc,GAAA;AACZ,aAAO,KAAA,MAAA,CAAP,OAAA;AAFK,KAAA;;AAIP,IAAA,aAAa,GAAA;AACX,aAAO,KAAA,cAAA,CAAA,KAAA,EAA2B;AAChC,QAAA,WAAW,EADqB,eAAA;AAEhC,QAAA,KAAK,EAAE,KAFyB,OAAA;AAGhC,QAAA,UAAU,EAAE,CAAC;AACX,UAAA,IAAI,EADO,MAAA;AAEX,UAAA,KAAK,EAAE,KAAK;AAFD,SAAD,CAHoB;AAOhC,QAAA,EAAE,EAAE,KAAK;AAPuB,OAA3B,EAQJ,KAAA,eAAA,CAAqB,KARxB,cAQwB,EAArB,CARI,CAAP;AALK,KAAA;;AAeP,IAAA,iBAAiB,GAAA;AACf,UAAI,CAAC,KAAL,YAAA,EAAwB;AACtB;AAFa,OAAA,CAKf;;;AACA,WAAA,YAAA,GAAA,KAAA;;AACA,UAAI,KAAA,WAAA,CAAA,eAAA,GAAJ,CAAA,EAA0C;AACxC,aAAA,WAAA,CADwC,eACxC,GADwC,CAGxC;;AACA,YAAI,KAAA,WAAA,CAAA,eAAA,KAAJ,CAAA,EAA4C;AAC1C,eAAA,WAAA,CAAA,gBAAA,GAAA,SAAA;AACD;AACF;AA7BI,KAAA;;AA+BP,IAAA,kBAAkB,GAAA;AAChB,UAAI,KAAJ,YAAA,EAAuB;AACrB;AAFc,OAAA,CAKhB;;;AACA,WAAA,YAAA,GAAA,IAAA;;AACA,UAAI,KAAA,WAAA,CAAA,eAAA,KAAJ,CAAA,EAA4C;AAC1C;AACA,aAAA,WAAA,CAAA,gBAAA,GAAoC,aAAa,CAAC,KAAA,WAAA,CAAA,GAAA,CAAlD,YAAiD,CAAjD;AACD;;AACD,WAAA,WAAA,CAAA,eAAA;AA1CK,KAAA;;AA4CP,IAAA,qBAAqB,GAAA;AACnB,WADmB,iBACnB,GADmB,CACM;AA7CpB,KAAA;;AA+CP,IAAA,OAAO,CAAA,EAAA,EAAiB;AACtB,UAAI,CAAC,KAAL,YAAA,EAAwB;AACtB;AACD;;AAED,WAAA,SAAA,CAAe,MAAK;AAClB;AACA,YAAI,CAAC,KAAD,kBAAA,IAA4B,CAAC,KAAjC,YAAA,EAAoD;AAClD;AAHgB,SAAA,CAMlB;;;AACA,aAAA,WAAA,CAAA,gBAAA,GAAoC,aAAa,CAAC,EAAE,CAApD,YAAiD,CAAjD;AAPF,OAAA;AASD;;AA7DM,GA9CF;;AA8GP,EAAA,MAAM,CAAA,CAAA,EAAG;AACP,WAAO,CAAC,CAAA,YAAA,EAAe;AACrB,MAAA,KAAK,EAAE;AACL,QAAA,IAAI,EAAE,KAAK;AADN,OADc;AAIrB,MAAA,EAAE,EAAE;AACF;AACA,QAAA,WAAW,EAAE,KAFX,kBAAA;AAGF,QAAA,UAAU,EAAE,KAHV,iBAAA;AAIF,QAAA,cAAc,EAAE,KAJd,qBAAA;AAMF;AACA,QAAA,WAAW,EAAE,KAPX,kBAAA;AAQF,QAAA,UAAU,EAAE,KARV,iBAAA;AASF,QAAA,cAAc,EAAE,KATd,qBAAA;AAWF;AACA,QAAA,KAAK,EAAE,KAAK;AAZV;AAJiB,KAAf,EAkBL,CAAC,KAlBJ,aAkBI,EAAD,CAlBK,CAAR;AAmBD;;AAlIM,CAFM,CAAf","sourcesContent":["// Components\nimport VWindow from './VWindow'\n\n// Mixins\nimport Bootable from '../../mixins/bootable'\nimport { factory as GroupableFactory } from '../../mixins/groupable'\n\n// Directives\nimport Touch from '../../directives/touch'\n\n// Utilities\nimport { convertToUnit } from '../../util/helpers'\nimport mixins, { ExtractVue } from '../../util/mixins'\n\n// Types\nimport { VNode } from 'vue'\n\nconst baseMixins = mixins(\n  Bootable,\n  GroupableFactory('windowGroup', 'v-window-item', 'v-window')\n)\n\ninterface options extends ExtractVue<typeof baseMixins> {\n  $el: HTMLElement\n  windowGroup: InstanceType<typeof VWindow>\n}\n\nexport default baseMixins.extend<options>().extend(\n  /* @vue/component */\n).extend({\n  name: 'v-window-item',\n\n  directives: {\n    Touch,\n  },\n\n  props: {\n    disabled: Boolean,\n    reverseTransition: {\n      type: [Boolean, String],\n      default: undefined,\n    },\n    transition: {\n      type: [Boolean, String],\n      default: undefined,\n    },\n    value: {\n      required: false,\n    },\n  },\n\n  data () {\n    return {\n      isActive: false,\n      inTransition: false,\n    }\n  },\n\n  computed: {\n    classes (): object {\n      return this.groupClasses\n    },\n    computedTransition (): string | boolean {\n      if (!this.windowGroup.internalReverse) {\n        return typeof this.transition !== 'undefined'\n          ? this.transition || ''\n          : this.windowGroup.computedTransition\n      }\n\n      return typeof this.reverseTransition !== 'undefined'\n        ? this.reverseTransition || ''\n        : this.windowGroup.computedTransition\n    },\n  },\n\n  methods: {\n    genDefaultSlot () {\n      return this.$slots.default\n    },\n    genWindowItem () {\n      return this.$createElement('div', {\n        staticClass: 'v-window-item',\n        class: this.classes,\n        directives: [{\n          name: 'show',\n          value: this.isActive,\n        }],\n        on: this.$listeners,\n      }, this.showLazyContent(this.genDefaultSlot()))\n    },\n    onAfterTransition () {\n      if (!this.inTransition) {\n        return\n      }\n\n      // Finalize transition state.\n      this.inTransition = false\n      if (this.windowGroup.transitionCount > 0) {\n        this.windowGroup.transitionCount--\n\n        // Remove container height if we are out of transition.\n        if (this.windowGroup.transitionCount === 0) {\n          this.windowGroup.transitionHeight = undefined\n        }\n      }\n    },\n    onBeforeTransition () {\n      if (this.inTransition) {\n        return\n      }\n\n      // Initialize transition state here.\n      this.inTransition = true\n      if (this.windowGroup.transitionCount === 0) {\n        // Set initial height for height transition.\n        this.windowGroup.transitionHeight = convertToUnit(this.windowGroup.$el.clientHeight)\n      }\n      this.windowGroup.transitionCount++\n    },\n    onTransitionCancelled () {\n      this.onAfterTransition() // This should have the same path as normal transition end.\n    },\n    onEnter (el: HTMLElement) {\n      if (!this.inTransition) {\n        return\n      }\n\n      this.$nextTick(() => {\n        // Do not set height if no transition or cancelled.\n        if (!this.computedTransition || !this.inTransition) {\n          return\n        }\n\n        // Set transition target height.\n        this.windowGroup.transitionHeight = convertToUnit(el.clientHeight)\n      })\n    },\n  },\n\n  render (h): VNode {\n    return h('transition', {\n      props: {\n        name: this.computedTransition,\n      },\n      on: {\n        // Handlers for enter windows.\n        beforeEnter: this.onBeforeTransition,\n        afterEnter: this.onAfterTransition,\n        enterCancelled: this.onTransitionCancelled,\n\n        // Handlers for leave windows.\n        beforeLeave: this.onBeforeTransition,\n        afterLeave: this.onAfterTransition,\n        leaveCancelled: this.onTransitionCancelled,\n\n        // Enter handler for height transition.\n        enter: this.onEnter,\n      },\n    }, [this.genWindowItem()])\n  },\n})\n"],"sourceRoot":""}]}