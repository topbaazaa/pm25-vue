{"remainingRequest":"C:\\Users\\Acer\\Desktop\\pmm\\pm25-vue\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Acer\\Desktop\\pmm\\pm25-vue\\node_modules\\vuetify\\lib\\components\\VItemGroup\\VItem.js","dependencies":[{"path":"C:\\Users\\Acer\\Desktop\\pmm\\pm25-vue\\node_modules\\vuetify\\lib\\components\\VItemGroup\\VItem.js","mtime":499162500000},{"path":"C:\\Users\\Acer\\Desktop\\pmm\\pm25-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Acer\\Desktop\\pmm\\pm25-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["// Mixins\nimport { factory as GroupableFactory } from '../../mixins/groupable'; // Utilities\n\nimport mixins from '../../util/mixins';\nimport { consoleWarn } from '../../util/console'; // Types\n\nimport Vue from 'vue';\n/* @vue/component */\n\nexport const BaseItem = Vue.extend({\n  props: {\n    activeClass: String,\n    value: {\n      required: false\n    }\n  },\n  data: () => ({\n    isActive: false\n  }),\n  methods: {\n    toggle() {\n      this.isActive = !this.isActive;\n    }\n\n  },\n\n  render() {\n    if (!this.$scopedSlots.default) {\n      consoleWarn('v-item is missing a default scopedSlot', this);\n      return null;\n    }\n\n    let element;\n    /* istanbul ignore else */\n\n    if (this.$scopedSlots.default) {\n      element = this.$scopedSlots.default({\n        active: this.isActive,\n        toggle: this.toggle\n      });\n    }\n\n    if (Array.isArray(element) && element.length === 1) {\n      element = element[0];\n    }\n\n    if (!element || Array.isArray(element) || !element.tag) {\n      consoleWarn('v-item should only contain a single element', this);\n      return element;\n    }\n\n    element.data = this._b(element.data || {}, element.tag, {\n      class: {\n        [this.activeClass]: this.isActive\n      }\n    });\n    return element;\n  }\n\n});\nexport default mixins(BaseItem, GroupableFactory('itemGroup', 'v-item', 'v-item-group')).extend({\n  name: 'v-item'\n});",{"version":3,"sources":["../../../src/components/VItemGroup/VItem.ts"],"names":[],"mappings":"AAAA;AACA,SAAS,OAAO,IAAhB,gBAAA,QAAA,wBAAA,C,CAEA;;AACA,OAAA,MAAA,MAAA,mBAAA;AACA,SAAA,WAAA,QAAA,oBAAA,C,CAEA;;AACA,OAAA,GAAA,MAAA,KAAA;AAGA;;AACA,OAAO,MAAM,QAAQ,GAAG,GAAG,CAAH,MAAA,CAAW;AACjC,EAAA,KAAK,EAAE;AACL,IAAA,WAAW,EADN,MAAA;AAEL,IAAA,KAAK,EAAE;AACL,MAAA,QAAQ,EAAE;AADL;AAFF,GAD0B;AAQjC,EAAA,IAAI,EAAE,OAAO;AACX,IAAA,QAAQ,EAAE;AADC,GAAP,CAR2B;AAYjC,EAAA,OAAO,EAAE;AACP,IAAA,MAAM,GAAA;AACJ,WAAA,QAAA,GAAgB,CAAC,KAAjB,QAAA;AACD;;AAHM,GAZwB;;AAkBjC,EAAA,MAAM,GAAA;AACJ,QAAI,CAAC,KAAA,YAAA,CAAL,OAAA,EAAgC;AAC9B,MAAA,WAAW,CAAA,wCAAA,EAAX,IAAW,CAAX;AAEA,aAAA,IAAA;AACD;;AAED,QAAA,OAAA;AAEA;;AACA,QAAI,KAAA,YAAA,CAAJ,OAAA,EAA+B;AAC7B,MAAA,OAAO,GAAG,KAAA,YAAA,CAAA,OAAA,CAA0B;AAClC,QAAA,MAAM,EAAE,KAD0B,QAAA;AAElC,QAAA,MAAM,EAAE,KAAK;AAFqB,OAA1B,CAAV;AAID;;AAED,QAAI,KAAK,CAAL,OAAA,CAAA,OAAA,KAA0B,OAAO,CAAP,MAAA,KAA9B,CAAA,EAAoD;AAClD,MAAA,OAAO,GAAG,OAAO,CAAjB,CAAiB,CAAjB;AACD;;AAED,QAAI,CAAA,OAAA,IAAY,KAAK,CAAL,OAAA,CAAZ,OAAY,CAAZ,IAAsC,CAAC,OAAO,CAAlD,GAAA,EAAwD;AACtD,MAAA,WAAW,CAAA,6CAAA,EAAX,IAAW,CAAX;AAEA,aAAA,OAAA;AACD;;AAED,IAAA,OAAO,CAAP,IAAA,GAAe,KAAA,EAAA,CAAQ,OAAO,CAAP,IAAA,IAAR,EAAA,EAA4B,OAAO,CAAnC,GAAA,EAA0C;AACvD,MAAA,KAAK,EAAE;AAAE,SAAC,KAAD,WAAA,GAAoB,KAAK;AAA3B;AADgD,KAA1C,CAAf;AAIA,WAAA,OAAA;AACD;;AAlDgC,CAAX,CAAjB;AAqDP,eAAe,MAAM,CAAA,QAAA,EAEnB,gBAAgB,CAAA,WAAA,EAAA,QAAA,EAFH,cAEG,CAFG,CAAN,CAAA,MAAA,CAGN;AACP,EAAA,IAAI,EAAE;AADC,CAHM,CAAf","sourcesContent":["// Mixins\nimport { factory as GroupableFactory } from '../../mixins/groupable'\n\n// Utilities\nimport mixins from '../../util/mixins'\nimport { consoleWarn } from '../../util/console'\n\n// Types\nimport Vue from 'vue'\nimport { VNode, ScopedSlotChildren } from 'vue/types/vnode'\n\n/* @vue/component */\nexport const BaseItem = Vue.extend({\n  props: {\n    activeClass: String,\n    value: {\n      required: false,\n    },\n  },\n\n  data: () => ({\n    isActive: false,\n  }),\n\n  methods: {\n    toggle () {\n      this.isActive = !this.isActive\n    },\n  },\n\n  render (): VNode {\n    if (!this.$scopedSlots.default) {\n      consoleWarn('v-item is missing a default scopedSlot', this)\n\n      return null as any\n    }\n\n    let element: VNode | ScopedSlotChildren\n\n    /* istanbul ignore else */\n    if (this.$scopedSlots.default) {\n      element = this.$scopedSlots.default({\n        active: this.isActive,\n        toggle: this.toggle,\n      })\n    }\n\n    if (Array.isArray(element) && element.length === 1) {\n      element = element[0]\n    }\n\n    if (!element || Array.isArray(element) || !element.tag) {\n      consoleWarn('v-item should only contain a single element', this)\n\n      return element as any\n    }\n\n    element.data = this._b(element.data || {}, element.tag!, {\n      class: { [this.activeClass]: this.isActive },\n    })\n\n    return element\n  },\n})\n\nexport default mixins(\n  BaseItem,\n  GroupableFactory('itemGroup', 'v-item', 'v-item-group')\n).extend({\n  name: 'v-item',\n})\n"],"sourceRoot":""}]}