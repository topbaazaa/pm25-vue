{"remainingRequest":"C:\\Users\\Acer\\Desktop\\pmm\\pm25-vue\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Acer\\Desktop\\pmm\\pm25-vue\\node_modules\\vuetify\\lib\\components\\VGrid\\VContainer.js","dependencies":[{"path":"C:\\Users\\Acer\\Desktop\\pmm\\pm25-vue\\node_modules\\vuetify\\lib\\components\\VGrid\\VContainer.js","mtime":499162500000},{"path":"C:\\Users\\Acer\\Desktop\\pmm\\pm25-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Acer\\Desktop\\pmm\\pm25-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"../../../src/components/VGrid/_grid.sass\";\nimport \"../../../src/components/VGrid/VGrid.sass\";\nimport Grid from './grid';\nimport mergeData from '../../util/mergeData';\n/* @vue/component */\n\nexport default Grid('container').extend({\n  name: 'v-container',\n  functional: true,\n  props: {\n    id: String,\n    tag: {\n      type: String,\n      default: 'div'\n    },\n    fluid: {\n      type: Boolean,\n      default: false\n    }\n  },\n\n  render(h, {\n    props,\n    data,\n    children\n  }) {\n    let classes;\n    const {\n      attrs\n    } = data;\n\n    if (attrs) {\n      // reset attrs to extract utility clases like pa-3\n      data.attrs = {};\n      classes = Object.keys(attrs).filter(key => {\n        // TODO: Remove once resolved\n        // https://github.com/vuejs/vue/issues/7841\n        if (key === 'slot') return false;\n        const value = attrs[key]; // add back data attributes like data-test=\"foo\" but do not\n        // add them as classes\n\n        if (key.startsWith('data-')) {\n          data.attrs[key] = value;\n          return false;\n        }\n\n        return value || typeof value === 'string';\n      });\n    }\n\n    if (props.id) {\n      data.domProps = data.domProps || {};\n      data.domProps.id = props.id;\n    }\n\n    return h(props.tag, mergeData(data, {\n      staticClass: 'container',\n      class: Array({\n        'container--fluid': props.fluid\n      }).concat(classes || [])\n    }), children);\n  }\n\n});",{"version":3,"sources":["../../../src/components/VGrid/VContainer.ts"],"names":[],"mappings":"AAAA,OAAA,0CAAA;AACA,OAAA,0CAAA;AAEA,OAAA,IAAA,MAAA,QAAA;AAEA,OAAA,SAAA,MAAA,sBAAA;AAEA;;AACA,eAAe,IAAI,CAAJ,WAAI,CAAJ,CAAA,MAAA,CAAyB;AACtC,EAAA,IAAI,EADkC,aAAA;AAEtC,EAAA,UAAU,EAF4B,IAAA;AAGtC,EAAA,KAAK,EAAE;AACL,IAAA,EAAE,EADG,MAAA;AAEL,IAAA,GAAG,EAAE;AACH,MAAA,IAAI,EADD,MAAA;AAEH,MAAA,OAAO,EAAE;AAFN,KAFA;AAML,IAAA,KAAK,EAAE;AACL,MAAA,IAAI,EADC,OAAA;AAEL,MAAA,OAAO,EAAE;AAFJ;AANF,GAH+B;;AActC,EAAA,MAAM,CAAA,CAAA,EAAK;AAAA,IAAA,KAAA;AAAA,IAAA,IAAA;AAAe,IAAA;AAAf,GAAL,EAA8B;AAClC,QAAA,OAAA;AACA,UAAM;AAAE,MAAA;AAAF,QAAN,IAAA;;AACA,QAAA,KAAA,EAAW;AACT;AACA,MAAA,IAAI,CAAJ,KAAA,GAAA,EAAA;AACA,MAAA,OAAO,GAAG,MAAM,CAAN,IAAA,CAAA,KAAA,EAAA,MAAA,CAA0B,GAAG,IAAG;AACxC;AACA;AACA,YAAI,GAAG,KAAP,MAAA,EAAoB,OAAA,KAAA;AAEpB,cAAM,KAAK,GAAG,KAAK,CALqB,GAKrB,CAAnB,CALwC,CAOxC;AACA;;AACA,YAAI,GAAG,CAAH,UAAA,CAAJ,OAAI,CAAJ,EAA6B;AAC3B,UAAA,IAAI,CAAJ,KAAA,CAAA,GAAA,IAAA,KAAA;AACA,iBAAA,KAAA;AACD;;AAED,eAAO,KAAK,IAAI,OAAA,KAAA,KAAhB,QAAA;AAdF,OAAU,CAAV;AAgBD;;AAED,QAAI,KAAK,CAAT,EAAA,EAAc;AACZ,MAAA,IAAI,CAAJ,QAAA,GAAgB,IAAI,CAAJ,QAAA,IAAhB,EAAA;AACA,MAAA,IAAI,CAAJ,QAAA,CAAA,EAAA,GAAmB,KAAK,CAAxB,EAAA;AACD;;AAED,WAAO,CAAC,CACN,KAAK,CADC,GAAA,EAEN,SAAS,CAAA,IAAA,EAAO;AACd,MAAA,WAAW,EADG,WAAA;AAEd,MAAA,KAAK,EAAE,KAAK,CAAM;AAChB,4BAAoB,KAAK,CAAC;AADV,OAAN,CAAL,CAAA,MAAA,CAEG,OAAO,IAFV,EAAA;AAFO,KAAP,CAFH,EAAR,QAAQ,CAAR;AAUD;;AArDqC,CAAzB,CAAf","sourcesContent":["import './_grid.sass'\nimport './VGrid.sass'\n\nimport Grid from './grid'\n\nimport mergeData from '../../util/mergeData'\n\n/* @vue/component */\nexport default Grid('container').extend({\n  name: 'v-container',\n  functional: true,\n  props: {\n    id: String,\n    tag: {\n      type: String,\n      default: 'div',\n    },\n    fluid: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  render (h, { props, data, children }) {\n    let classes\n    const { attrs } = data\n    if (attrs) {\n      // reset attrs to extract utility clases like pa-3\n      data.attrs = {}\n      classes = Object.keys(attrs).filter(key => {\n        // TODO: Remove once resolved\n        // https://github.com/vuejs/vue/issues/7841\n        if (key === 'slot') return false\n\n        const value = attrs[key]\n\n        // add back data attributes like data-test=\"foo\" but do not\n        // add them as classes\n        if (key.startsWith('data-')) {\n          data.attrs![key] = value\n          return false\n        }\n\n        return value || typeof value === 'string'\n      })\n    }\n\n    if (props.id) {\n      data.domProps = data.domProps || {}\n      data.domProps.id = props.id\n    }\n\n    return h(\n      props.tag,\n      mergeData(data, {\n        staticClass: 'container',\n        class: Array<any>({\n          'container--fluid': props.fluid,\n        }).concat(classes || []),\n      }),\n      children\n    )\n  },\n})\n"],"sourceRoot":""}]}