{"remainingRequest":"C:\\Users\\Acer\\Desktop\\pmm\\pm25-vue\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Acer\\Desktop\\pmm\\pm25-vue\\node_modules\\vuetify\\lib\\services\\icons\\index.js","dependencies":[{"path":"C:\\Users\\Acer\\Desktop\\pmm\\pm25-vue\\node_modules\\vuetify\\lib\\services\\icons\\index.js","mtime":499162500000},{"path":"C:\\Users\\Acer\\Desktop\\pmm\\pm25-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Acer\\Desktop\\pmm\\pm25-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["// Extensions\nimport { Service } from '../service'; // Presets\n\nimport presets from './presets';\nexport class Icons extends Service {\n  constructor(options = {}) {\n    super();\n    this.iconfont = 'mdi';\n    this.values = presets[this.iconfont];\n    if (options.iconfont) this.iconfont = options.iconfont;\n    this.values = { ...presets[this.iconfont],\n      ...(options.values || {})\n    };\n  }\n\n}\nIcons.property = 'icons';",{"version":3,"sources":["../../../src/services/icons/index.ts"],"names":[],"mappings":"AAAA;AACA,SAAA,OAAA,QAAA,YAAA,C,CAKA;;AACA,OAAA,OAAA,MAAA,WAAA;AAEA,OAAM,MAAA,KAAA,SAAA,OAAA,CAA4B;AAOhC,EAAA,WAAA,CAAa,OAAA,GAAb,EAAA,EAA0C;AACxC;AALK,SAAA,QAAA,GAAA,KAAA;AAEA,SAAA,MAAA,GAA2B,OAAO,CAAC,KAAnC,QAAkC,CAAlC;AAIL,QAAI,OAAO,CAAX,QAAA,EAAsB,KAAA,QAAA,GAAgB,OAAO,CAAvB,QAAA;AAEtB,SAAA,MAAA,GAAc,EACZ,GAAG,OAAO,CAAC,KADC,QACF,CADE;AAEZ,UAAI,OAAO,CAAP,MAAA,IAAJ,EAAA;AAFY,KAAd;AAID;;AAf+B;AACzB,KAAA,CAAA,QAAA,GAAA,OAAA","sourcesContent":["// Extensions\nimport { Service } from '../service'\n\n// Types\nimport { Icons as IIcons } from 'vuetify/types/services/icons'\n\n// Presets\nimport presets from './presets'\n\nexport class Icons extends Service implements IIcons {\n  static property = 'icons'\n\n  public iconfont: IIcons['iconfont'] = 'mdi'\n\n  public values: IIcons['values'] = presets[this.iconfont]\n\n  constructor (options: Partial<IIcons> = {}) {\n    super()\n    if (options.iconfont) this.iconfont = options.iconfont\n\n    this.values = {\n      ...presets[this.iconfont],\n      ...(options.values || {}),\n    }\n  }\n}\n"],"sourceRoot":""}]}