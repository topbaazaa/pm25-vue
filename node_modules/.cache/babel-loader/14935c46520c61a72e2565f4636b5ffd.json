{"remainingRequest":"C:\\Users\\Acer\\Desktop\\pmm\\pm25-vue\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Acer\\Desktop\\pmm\\pm25-vue\\node_modules\\vuetify\\lib\\components\\VBadge\\VBadge.js","dependencies":[{"path":"C:\\Users\\Acer\\Desktop\\pmm\\pm25-vue\\node_modules\\vuetify\\lib\\components\\VBadge\\VBadge.js","mtime":499162500000},{"path":"C:\\Users\\Acer\\Desktop\\pmm\\pm25-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Acer\\Desktop\\pmm\\pm25-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["// Styles\nimport \"../../../src/components/VBadge/VBadge.sass\"; // Mixins\n\nimport Colorable from '../../mixins/colorable';\nimport Toggleable from '../../mixins/toggleable';\nimport { factory as PositionableFactory } from '../../mixins/positionable';\nimport Transitionable from '../../mixins/transitionable';\nimport mixins from '../../util/mixins';\nexport default mixins(Colorable, Toggleable, PositionableFactory(['left', 'bottom']), Transitionable\n/* @vue/component */\n).extend({\n  name: 'v-badge',\n  props: {\n    color: {\n      type: String,\n      default: 'primary'\n    },\n    overlap: Boolean,\n    transition: {\n      type: String,\n      default: 'fab-transition'\n    },\n    value: {\n      default: true\n    }\n  },\n  computed: {\n    classes() {\n      return {\n        'v-badge--bottom': this.bottom,\n        'v-badge--left': this.left,\n        'v-badge--overlap': this.overlap\n      };\n    }\n\n  },\n\n  render(h) {\n    const badge = this.$slots.badge && [h('span', this.setBackgroundColor(this.color, {\n      staticClass: 'v-badge__badge',\n      attrs: this.$attrs,\n      directives: [{\n        name: 'show',\n        value: this.isActive\n      }]\n    }), this.$slots.badge)];\n    return h('span', {\n      staticClass: 'v-badge',\n      class: this.classes\n    }, [this.$slots.default, this.transition ? h('transition', {\n      props: {\n        name: this.transition,\n        origin: this.origin,\n        mode: this.mode\n      }\n    }, badge) : badge]);\n  }\n\n});",{"version":3,"sources":["../../../src/components/VBadge/VBadge.ts"],"names":[],"mappings":"AAAA;AACA,OAAA,4CAAA,C,CAEA;;AACA,OAAA,SAAA,MAAA,wBAAA;AACA,OAAA,UAAA,MAAA,yBAAA;AACA,SAAS,OAAO,IAAhB,mBAAA,QAAA,2BAAA;AACA,OAAA,cAAA,MAAA,6BAAA;AAIA,OAAA,MAAA,MAAA,mBAAA;AAEA,eAAe,MAAM,CAAA,SAAA,EAAA,UAAA,EAGnB,mBAAmB,CAAC,CAAA,MAAA,EAHD,QAGC,CAAD,CAHA,EAInB;AACF;AALqB,CAAN,CAAA,MAAA,CAMN;AACP,EAAA,IAAI,EADG,SAAA;AAGP,EAAA,KAAK,EAAE;AACL,IAAA,KAAK,EAAE;AACL,MAAA,IAAI,EADC,MAAA;AAEL,MAAA,OAAO,EAAE;AAFJ,KADF;AAKL,IAAA,OAAO,EALF,OAAA;AAML,IAAA,UAAU,EAAE;AACV,MAAA,IAAI,EADM,MAAA;AAEV,MAAA,OAAO,EAAE;AAFC,KANP;AAUL,IAAA,KAAK,EAAE;AACL,MAAA,OAAO,EAAE;AADJ;AAVF,GAHA;AAkBP,EAAA,QAAQ,EAAE;AACR,IAAA,OAAO,GAAA;AACL,aAAO;AACL,2BAAmB,KADd,MAAA;AAEL,yBAAiB,KAFZ,IAAA;AAGL,4BAAoB,KAAK;AAHpB,OAAP;AAKD;;AAPO,GAlBH;;AA4BP,EAAA,MAAM,CAAA,CAAA,EAAG;AACP,UAAM,KAAK,GAAG,KAAA,MAAA,CAAA,KAAA,IAAqB,CAAC,CAAC,CAAA,MAAA,EAAS,KAAA,kBAAA,CAAwB,KAAxB,KAAA,EAAoC;AAChF,MAAA,WAAW,EADqE,gBAAA;AAEhF,MAAA,KAAK,EAAE,KAFyE,MAAA;AAGhF,MAAA,UAAU,EAAE,CAAC;AACX,QAAA,IAAI,EADO,MAAA;AAEX,QAAA,KAAK,EAAE,KAAK;AAFD,OAAD;AAHoE,KAApC,CAAT,EAOjC,KAAA,MAAA,CAPJ,KAAqC,CAAF,CAAnC;AASA,WAAO,CAAC,CAAA,MAAA,EAAS;AACf,MAAA,WAAW,EADI,SAAA;AAEf,MAAA,KAAK,EAAE,KAAK;AAFG,KAAT,EAGL,CACD,KAAA,MAAA,CADC,OAAA,EAED,KAAA,UAAA,GAAkB,CAAC,CAAA,YAAA,EAAe;AAChC,MAAA,KAAK,EAAE;AACL,QAAA,IAAI,EAAE,KADD,UAAA;AAEL,QAAA,MAAM,EAAE,KAFH,MAAA;AAGL,QAAA,IAAI,EAAE,KAAK;AAHN;AADyB,KAAf,EAAnB,KAAmB,CAAnB,GALF,KAGG,CAHK,CAAR;AAaD;;AAnDM,CANM,CAAf","sourcesContent":["// Styles\nimport './VBadge.sass'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport Toggleable from '../../mixins/toggleable'\nimport { factory as PositionableFactory } from '../../mixins/positionable'\nimport Transitionable from '../../mixins/transitionable'\n\n// Types\nimport { VNode } from 'vue'\nimport mixins from '../../util/mixins'\n\nexport default mixins(\n  Colorable,\n  Toggleable,\n  PositionableFactory(['left', 'bottom']),\n  Transitionable\n/* @vue/component */\n).extend({\n  name: 'v-badge',\n\n  props: {\n    color: {\n      type: String,\n      default: 'primary',\n    },\n    overlap: Boolean,\n    transition: {\n      type: String,\n      default: 'fab-transition',\n    },\n    value: {\n      default: true,\n    },\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        'v-badge--bottom': this.bottom,\n        'v-badge--left': this.left,\n        'v-badge--overlap': this.overlap,\n      }\n    },\n  },\n\n  render (h): VNode {\n    const badge = this.$slots.badge && [h('span', this.setBackgroundColor(this.color, {\n      staticClass: 'v-badge__badge',\n      attrs: this.$attrs,\n      directives: [{\n        name: 'show',\n        value: this.isActive,\n      }],\n    }), this.$slots.badge)]\n\n    return h('span', {\n      staticClass: 'v-badge',\n      class: this.classes,\n    }, [\n      this.$slots.default,\n      this.transition ? h('transition', {\n        props: {\n          name: this.transition,\n          origin: this.origin,\n          mode: this.mode,\n        },\n      }, badge) : badge,\n    ])\n  },\n})\n"],"sourceRoot":""}]}