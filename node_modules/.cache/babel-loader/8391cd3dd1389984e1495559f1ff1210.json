{"remainingRequest":"C:\\Users\\Acer\\Desktop\\pmm\\pm25-vue\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Acer\\Desktop\\pmm\\pm25-vue\\node_modules\\vuetify\\lib\\components\\VDialog\\VDialog.js","dependencies":[{"path":"C:\\Users\\Acer\\Desktop\\pmm\\pm25-vue\\node_modules\\vuetify\\lib\\components\\VDialog\\VDialog.js","mtime":499162500000},{"path":"C:\\Users\\Acer\\Desktop\\pmm\\pm25-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Acer\\Desktop\\pmm\\pm25-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"../../../src/components/VDialog/VDialog.sass\"; // Mixins\n\nimport Activatable from '../../mixins/activatable';\nimport Dependent from '../../mixins/dependent';\nimport Detachable from '../../mixins/detachable';\nimport Overlayable from '../../mixins/overlayable';\nimport Returnable from '../../mixins/returnable';\nimport Stackable from '../../mixins/stackable';\nimport Toggleable from '../../mixins/toggleable'; // Directives\n\nimport ClickOutside from '../../directives/click-outside'; // Helpers\n\nimport { convertToUnit, keyCodes } from '../../util/helpers';\nimport ThemeProvider from '../../util/ThemeProvider';\nimport mixins from '../../util/mixins';\nimport { removed } from '../../util/console';\nconst baseMixins = mixins(Activatable, Dependent, Detachable, Overlayable, Returnable, Stackable, Toggleable);\n/* @vue/component */\n\nexport default baseMixins.extend({\n  name: 'v-dialog',\n  directives: {\n    ClickOutside\n  },\n  props: {\n    dark: Boolean,\n    disabled: Boolean,\n    fullscreen: Boolean,\n    light: Boolean,\n    maxWidth: {\n      type: [String, Number],\n      default: 'none'\n    },\n    noClickAnimation: Boolean,\n    origin: {\n      type: String,\n      default: 'center center'\n    },\n    persistent: Boolean,\n    retainFocus: {\n      type: Boolean,\n      default: true\n    },\n    scrollable: Boolean,\n    transition: {\n      type: [String, Boolean],\n      default: 'dialog-transition'\n    },\n    width: {\n      type: [String, Number],\n      default: 'auto'\n    }\n  },\n\n  data() {\n    return {\n      activatedBy: null,\n      animate: false,\n      animateTimeout: -1,\n      isActive: !!this.value,\n      stackMinZIndex: 200\n    };\n  },\n\n  computed: {\n    classes() {\n      return {\n        [`v-dialog ${this.contentClass}`.trim()]: true,\n        'v-dialog--active': this.isActive,\n        'v-dialog--persistent': this.persistent,\n        'v-dialog--fullscreen': this.fullscreen,\n        'v-dialog--scrollable': this.scrollable,\n        'v-dialog--animated': this.animate\n      };\n    },\n\n    contentClasses() {\n      return {\n        'v-dialog__content': true,\n        'v-dialog__content--active': this.isActive\n      };\n    },\n\n    hasActivator() {\n      return Boolean(!!this.$slots.activator || !!this.$scopedSlots.activator);\n    }\n\n  },\n  watch: {\n    isActive(val) {\n      if (val) {\n        this.show();\n        this.hideScroll();\n      } else {\n        this.removeOverlay();\n        this.unbind();\n      }\n    },\n\n    fullscreen(val) {\n      if (!this.isActive) return;\n\n      if (val) {\n        this.hideScroll();\n        this.removeOverlay(false);\n      } else {\n        this.showScroll();\n        this.genOverlay();\n      }\n    }\n\n  },\n\n  created() {\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('full-width')) {\n      removed('full-width', this);\n    }\n  },\n\n  beforeMount() {\n    this.$nextTick(() => {\n      this.isBooted = this.isActive;\n      this.isActive && this.show();\n    });\n  },\n\n  beforeDestroy() {\n    if (typeof window !== 'undefined') this.unbind();\n  },\n\n  methods: {\n    animateClick() {\n      this.animate = false; // Needed for when clicking very fast\n      // outside of the dialog\n\n      this.$nextTick(() => {\n        this.animate = true;\n        window.clearTimeout(this.animateTimeout);\n        this.animateTimeout = window.setTimeout(() => this.animate = false, 150);\n      });\n    },\n\n    closeConditional(e) {\n      const target = e.target; // Ignore the click if the dialog is closed or destroyed,\n      // if it was on an element inside the content, or\n      // if it was dragged onto the overlay (#6969)\n\n      return !(this._isDestroyed || !this.isActive || this.$refs.content.contains(target) || this.overlay && target && !this.overlay.$el.contains(target));\n    },\n\n    hideScroll() {\n      if (this.fullscreen) {\n        document.documentElement.classList.add('overflow-y-hidden');\n      } else {\n        Overlayable.options.methods.hideScroll.call(this);\n      }\n    },\n\n    show() {\n      !this.fullscreen && !this.hideOverlay && this.genOverlay();\n      this.$nextTick(() => {\n        this.$refs.content.focus();\n        this.bind();\n      });\n    },\n\n    bind() {\n      window.addEventListener('focusin', this.onFocusin);\n    },\n\n    unbind() {\n      window.removeEventListener('focusin', this.onFocusin);\n    },\n\n    onClickOutside(e) {\n      this.$emit('click:outside', e);\n\n      if (this.persistent) {\n        this.noClickAnimation || this.animateClick();\n      } else if (this.activeZIndex >= this.getMaxZIndex()) {\n        this.isActive = false;\n      }\n    },\n\n    onKeydown(e) {\n      if (e.keyCode === keyCodes.esc && !this.getOpenDependents().length) {\n        if (!this.persistent) {\n          this.isActive = false;\n          const activator = this.getActivator();\n          this.$nextTick(() => activator && activator.focus());\n        } else if (!this.noClickAnimation) {\n          this.animateClick();\n        }\n      }\n\n      this.$emit('keydown', e);\n    },\n\n    // On focus change, wrap focus to stay inside the dialog\n    // https://github.com/vuetifyjs/vuetify/issues/6892\n    onFocusin(e) {\n      if (!e || !this.retainFocus) return;\n      const target = e.target;\n\n      if (!!target && // It isn't the document or the dialog body\n      ![document, this.$refs.content].includes(target) && // It isn't inside the dialog body\n      !this.$refs.content.contains(target) && // We're the topmost dialog\n      this.activeZIndex >= this.getMaxZIndex() && // It isn't inside a dependent element (like a menu)\n      !this.getOpenDependentElements().some(el => el.contains(target)) // So we must have focused something outside the dialog and its children\n      ) {\n          // Find and focus the first available element inside the dialog\n          const focusable = this.$refs.content.querySelectorAll('button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])');\n          focusable.length && focusable[0].focus();\n        }\n    }\n\n  },\n\n  render(h) {\n    const children = [];\n    const data = {\n      class: this.classes,\n      ref: 'dialog',\n      directives: [{\n        name: 'click-outside',\n        value: this.onClickOutside,\n        args: {\n          closeConditional: this.closeConditional,\n          include: this.getOpenDependentElements\n        }\n      }, {\n        name: 'show',\n        value: this.isActive\n      }],\n      on: {\n        click: e => {\n          e.stopPropagation();\n        }\n      },\n      style: {}\n    };\n\n    if (!this.fullscreen) {\n      data.style = {\n        maxWidth: this.maxWidth === 'none' ? undefined : convertToUnit(this.maxWidth),\n        width: this.width === 'auto' ? undefined : convertToUnit(this.width)\n      };\n    }\n\n    children.push(this.genActivator());\n    let dialog = h('div', data, this.showLazyContent(this.getContentSlot()));\n\n    if (this.transition) {\n      dialog = h('transition', {\n        props: {\n          name: this.transition,\n          origin: this.origin\n        }\n      }, [dialog]);\n    }\n\n    children.push(h('div', {\n      class: this.contentClasses,\n      attrs: {\n        role: 'document',\n        tabindex: this.isActive ? 0 : undefined,\n        ...this.getScopeIdAttrs()\n      },\n      on: {\n        keydown: this.onKeydown\n      },\n      style: {\n        zIndex: this.activeZIndex\n      },\n      ref: 'content'\n    }, [this.$createElement(ThemeProvider, {\n      props: {\n        root: true,\n        light: this.light,\n        dark: this.dark\n      }\n    }, [dialog])]));\n    return h('div', {\n      staticClass: 'v-dialog__container',\n      class: {\n        'v-dialog__container--attached': this.attach === '' || this.attach === true || this.attach === 'attach'\n      },\n      attrs: {\n        role: 'dialog'\n      }\n    }, children);\n  }\n\n});",{"version":3,"sources":["../../../src/components/VDialog/VDialog.ts"],"names":[],"mappings":"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","sourcesContent":["import './VDialog.sass'\n\n// Mixins\nimport Activatable from '../../mixins/activatable'\nimport Dependent from '../../mixins/dependent'\nimport Detachable from '../../mixins/detachable'\nimport Overlayable from '../../mixins/overlayable'\nimport Returnable from '../../mixins/returnable'\nimport Stackable from '../../mixins/stackable'\nimport Toggleable from '../../mixins/toggleable'\n\n// Directives\nimport ClickOutside from '../../directives/click-outside'\n\n// Helpers\nimport { convertToUnit, keyCodes } from '../../util/helpers'\nimport ThemeProvider from '../../util/ThemeProvider'\nimport mixins from '../../util/mixins'\nimport { removed } from '../../util/console'\n\n// Types\nimport { VNode } from 'vue'\n\nconst baseMixins = mixins(\n  Activatable,\n  Dependent,\n  Detachable,\n  Overlayable,\n  Returnable,\n  Stackable,\n  Toggleable\n)\n\n/* @vue/component */\nexport default baseMixins.extend({\n  name: 'v-dialog',\n\n  directives: {\n    ClickOutside,\n  },\n\n  props: {\n    dark: Boolean,\n    disabled: Boolean,\n    fullscreen: Boolean,\n    light: Boolean,\n    maxWidth: {\n      type: [String, Number],\n      default: 'none',\n    },\n    noClickAnimation: Boolean,\n    origin: {\n      type: String,\n      default: 'center center',\n    },\n    persistent: Boolean,\n    retainFocus: {\n      type: Boolean,\n      default: true,\n    },\n    scrollable: Boolean,\n    transition: {\n      type: [String, Boolean],\n      default: 'dialog-transition',\n    },\n    width: {\n      type: [String, Number],\n      default: 'auto',\n    },\n  },\n\n  data () {\n    return {\n      activatedBy: null as EventTarget | null,\n      animate: false,\n      animateTimeout: -1,\n      isActive: !!this.value,\n      stackMinZIndex: 200,\n    }\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        [(`v-dialog ${this.contentClass}`).trim()]: true,\n        'v-dialog--active': this.isActive,\n        'v-dialog--persistent': this.persistent,\n        'v-dialog--fullscreen': this.fullscreen,\n        'v-dialog--scrollable': this.scrollable,\n        'v-dialog--animated': this.animate,\n      }\n    },\n    contentClasses (): object {\n      return {\n        'v-dialog__content': true,\n        'v-dialog__content--active': this.isActive,\n      }\n    },\n    hasActivator (): boolean {\n      return Boolean(\n        !!this.$slots.activator ||\n        !!this.$scopedSlots.activator\n      )\n    },\n  },\n\n  watch: {\n    isActive (val) {\n      if (val) {\n        this.show()\n        this.hideScroll()\n      } else {\n        this.removeOverlay()\n        this.unbind()\n      }\n    },\n    fullscreen (val) {\n      if (!this.isActive) return\n\n      if (val) {\n        this.hideScroll()\n        this.removeOverlay(false)\n      } else {\n        this.showScroll()\n        this.genOverlay()\n      }\n    },\n  },\n\n  created () {\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('full-width')) {\n      removed('full-width', this)\n    }\n  },\n\n  beforeMount () {\n    this.$nextTick(() => {\n      this.isBooted = this.isActive\n      this.isActive && this.show()\n    })\n  },\n\n  beforeDestroy () {\n    if (typeof window !== 'undefined') this.unbind()\n  },\n\n  methods: {\n    animateClick () {\n      this.animate = false\n      // Needed for when clicking very fast\n      // outside of the dialog\n      this.$nextTick(() => {\n        this.animate = true\n        window.clearTimeout(this.animateTimeout)\n        this.animateTimeout = window.setTimeout(() => (this.animate = false), 150)\n      })\n    },\n    closeConditional (e: Event) {\n      const target = e.target as HTMLElement\n      // Ignore the click if the dialog is closed or destroyed,\n      // if it was on an element inside the content, or\n      // if it was dragged onto the overlay (#6969)\n      return !(\n        this._isDestroyed ||\n        !this.isActive ||\n        this.$refs.content.contains(target) ||\n        (this.overlay && target && !this.overlay.$el.contains(target))\n      )\n    },\n    hideScroll () {\n      if (this.fullscreen) {\n        document.documentElement.classList.add('overflow-y-hidden')\n      } else {\n        Overlayable.options.methods.hideScroll.call(this)\n      }\n    },\n    show () {\n      !this.fullscreen && !this.hideOverlay && this.genOverlay()\n      this.$nextTick(() => {\n        this.$refs.content.focus()\n        this.bind()\n      })\n    },\n    bind () {\n      window.addEventListener('focusin', this.onFocusin)\n    },\n    unbind () {\n      window.removeEventListener('focusin', this.onFocusin)\n    },\n    onClickOutside (e: Event) {\n      this.$emit('click:outside', e)\n\n      if (this.persistent) {\n        this.noClickAnimation || this.animateClick()\n      } else if (this.activeZIndex >= this.getMaxZIndex()) {\n        this.isActive = false\n      }\n    },\n    onKeydown (e: KeyboardEvent) {\n      if (e.keyCode === keyCodes.esc && !this.getOpenDependents().length) {\n        if (!this.persistent) {\n          this.isActive = false\n          const activator = this.getActivator()\n          this.$nextTick(() => activator && (activator as HTMLElement).focus())\n        } else if (!this.noClickAnimation) {\n          this.animateClick()\n        }\n      }\n      this.$emit('keydown', e)\n    },\n    // On focus change, wrap focus to stay inside the dialog\n    // https://github.com/vuetifyjs/vuetify/issues/6892\n    onFocusin (e: Event) {\n      if (!e || !this.retainFocus) return\n\n      const target = e.target as HTMLElement\n\n      if (\n        !!target &&\n        // It isn't the document or the dialog body\n        ![document, this.$refs.content].includes(target) &&\n        // It isn't inside the dialog body\n        !this.$refs.content.contains(target) &&\n        // We're the topmost dialog\n        this.activeZIndex >= this.getMaxZIndex() &&\n        // It isn't inside a dependent element (like a menu)\n        !this.getOpenDependentElements().some(el => el.contains(target))\n        // So we must have focused something outside the dialog and its children\n      ) {\n        // Find and focus the first available element inside the dialog\n        const focusable = this.$refs.content.querySelectorAll('button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])')\n        focusable.length && (focusable[0] as HTMLElement).focus()\n      }\n    },\n  },\n\n  render (h): VNode {\n    const children = []\n    const data = {\n      class: this.classes,\n      ref: 'dialog',\n      directives: [\n        {\n          name: 'click-outside',\n          value: this.onClickOutside,\n          args: {\n            closeConditional: this.closeConditional,\n            include: this.getOpenDependentElements,\n          },\n        },\n        { name: 'show', value: this.isActive },\n      ],\n      on: {\n        click: (e: Event) => { e.stopPropagation() },\n      },\n      style: {},\n    }\n\n    if (!this.fullscreen) {\n      data.style = {\n        maxWidth: this.maxWidth === 'none' ? undefined : convertToUnit(this.maxWidth),\n        width: this.width === 'auto' ? undefined : convertToUnit(this.width),\n      }\n    }\n\n    children.push(this.genActivator())\n\n    let dialog = h('div', data, this.showLazyContent(this.getContentSlot()))\n    if (this.transition) {\n      dialog = h('transition', {\n        props: {\n          name: this.transition,\n          origin: this.origin,\n        },\n      }, [dialog])\n    }\n\n    children.push(h('div', {\n      class: this.contentClasses,\n      attrs: {\n        role: 'document',\n        tabindex: this.isActive ? 0 : undefined,\n        ...this.getScopeIdAttrs(),\n      },\n      on: {\n        keydown: this.onKeydown,\n      },\n      style: { zIndex: this.activeZIndex },\n      ref: 'content',\n    }, [\n      this.$createElement(ThemeProvider, {\n        props: {\n          root: true,\n          light: this.light,\n          dark: this.dark,\n        },\n      }, [dialog]),\n    ]))\n\n    return h('div', {\n      staticClass: 'v-dialog__container',\n      class: {\n        'v-dialog__container--attached':\n          this.attach === '' ||\n          this.attach === true ||\n          this.attach === 'attach',\n      },\n      attrs: { role: 'dialog' },\n    }, children)\n  },\n})\n"],"sourceRoot":""}]}